com/ntt/skyway/BuildConfig = Com.Ntt.Skyway.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  LIBRARY_PACKAGE_NAME = LibraryPackageName
  SkyWayVer = SkyWayVer
com/ntt/skyway/core/channel/Channel = Com.Ntt.Skyway.Core.Channel.IChannel
  Companion = Companion
  getBots()Ljava/util/Set; = Bots
  getId()Ljava/lang/String; = Id
  getLocalPerson()Lcom/ntt/skyway/core/channel/member/LocalPerson; = LocalPerson
  getMembers()Ljava/util/Set; = Members
  getMetadata()Ljava/lang/String; = Metadata
  getName()Ljava/lang/String; = Name
  getOnClosedHandler()Lkotlin/jvm/functions/Function0; = OnClosedHandler
  setOnClosedHandler(Lkotlin/jvm/functions/Function0;)V = OnClosedHandler
  getOnErrorHandler()Lkotlin/jvm/functions/Function1; = OnErrorHandler
  setOnErrorHandler(Lkotlin/jvm/functions/Function1;)V = OnErrorHandler
  getOnMemberJoinedHandler()Lkotlin/jvm/functions/Function1; = OnMemberJoinedHandler
  setOnMemberJoinedHandler(Lkotlin/jvm/functions/Function1;)V = OnMemberJoinedHandler
  getOnMemberLeftHandler()Lkotlin/jvm/functions/Function1; = OnMemberLeftHandler
  setOnMemberLeftHandler(Lkotlin/jvm/functions/Function1;)V = OnMemberLeftHandler
  getOnMemberListChangedHandler()Lkotlin/jvm/functions/Function0; = OnMemberListChangedHandler
  setOnMemberListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnMemberListChangedHandler
  getOnMemberMetadataUpdatedHandler()Lkotlin/jvm/functions/Function2; = OnMemberMetadataUpdatedHandler
  setOnMemberMetadataUpdatedHandler(Lkotlin/jvm/functions/Function2;)V = OnMemberMetadataUpdatedHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnPublicationDisabledHandler()Lkotlin/jvm/functions/Function1; = OnPublicationDisabledHandler
  setOnPublicationDisabledHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationDisabledHandler
  getOnPublicationEnabledHandler()Lkotlin/jvm/functions/Function1; = OnPublicationEnabledHandler
  setOnPublicationEnabledHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationEnabledHandler
  getOnPublicationListChangedHandler()Lkotlin/jvm/functions/Function0; = OnPublicationListChangedHandler
  setOnPublicationListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnPublicationListChangedHandler
  getOnPublicationMetadataUpdatedHandler()Lkotlin/jvm/functions/Function2; = OnPublicationMetadataUpdatedHandler
  setOnPublicationMetadataUpdatedHandler(Lkotlin/jvm/functions/Function2;)V = OnPublicationMetadataUpdatedHandler
  getOnPublicationSubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationSubscribedHandler
  setOnPublicationSubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationSubscribedHandler
  getOnPublicationUnsubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationUnsubscribedHandler
  setOnPublicationUnsubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationUnsubscribedHandler
  getOnStreamPublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamPublishedHandler
  setOnStreamPublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamPublishedHandler
  getOnStreamUnpublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamUnpublishedHandler
  setOnStreamUnpublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamUnpublishedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getPublications()Ljava/util/Set; = Publications
  getSubscriptions()Ljava/util/Set; = Subscriptions
  close(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Close(Kotlin.Coroutines.IContinuation)
  create(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Create(string, string, Kotlin.Coroutines.IContinuation)
  dispose()V = Dispose()
  find(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Find(string, string, Kotlin.Coroutines.IContinuation)
  findOrCreate(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = FindOrCreate(string, string, Kotlin.Coroutines.IContinuation)
  getState()Lcom/ntt/skyway/core/channel/Channel$State; = GetState()
  join(Lcom/ntt/skyway/core/channel/member/Member$Init;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Join(Com.Ntt.Skyway.Core.Channel.Member.IMember.Init, Kotlin.Coroutines.IContinuation)
  leave(Lcom/ntt/skyway/core/channel/member/Member;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Leave(Com.Ntt.Skyway.Core.Channel.Member.IMember, Kotlin.Coroutines.IContinuation)
  updateMetadata(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = UpdateMetadata(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/core/channel/ChannelImpl = Com.Ntt.Skyway.Core.Channel.ChannelImpl
  Companion = Companion
  getBots()Ljava/util/Set; = Bots
  getId()Ljava/lang/String; = Id
  getLocalPerson()Lcom/ntt/skyway/core/channel/member/LocalPerson; = LocalPerson
  getMembers()Ljava/util/Set; = Members
  getMetadata()Ljava/lang/String; = Metadata
  getName()Ljava/lang/String; = Name
  getNativePointer()J = NativePointer
  getOnClosedHandler()Lkotlin/jvm/functions/Function0; = OnClosedHandler
  setOnClosedHandler(Lkotlin/jvm/functions/Function0;)V = OnClosedHandler
  getOnErrorHandler()Lkotlin/jvm/functions/Function1; = OnErrorHandler
  setOnErrorHandler(Lkotlin/jvm/functions/Function1;)V = OnErrorHandler
  getOnMemberJoinedHandler()Lkotlin/jvm/functions/Function1; = OnMemberJoinedHandler
  setOnMemberJoinedHandler(Lkotlin/jvm/functions/Function1;)V = OnMemberJoinedHandler
  getOnMemberLeftHandler()Lkotlin/jvm/functions/Function1; = OnMemberLeftHandler
  setOnMemberLeftHandler(Lkotlin/jvm/functions/Function1;)V = OnMemberLeftHandler
  getOnMemberListChangedHandler()Lkotlin/jvm/functions/Function0; = OnMemberListChangedHandler
  setOnMemberListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnMemberListChangedHandler
  getOnMemberMetadataUpdatedHandler()Lkotlin/jvm/functions/Function2; = OnMemberMetadataUpdatedHandler
  setOnMemberMetadataUpdatedHandler(Lkotlin/jvm/functions/Function2;)V = OnMemberMetadataUpdatedHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnPublicationDisabledHandler()Lkotlin/jvm/functions/Function1; = OnPublicationDisabledHandler
  setOnPublicationDisabledHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationDisabledHandler
  getOnPublicationEnabledHandler()Lkotlin/jvm/functions/Function1; = OnPublicationEnabledHandler
  setOnPublicationEnabledHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationEnabledHandler
  getOnPublicationListChangedHandler()Lkotlin/jvm/functions/Function0; = OnPublicationListChangedHandler
  setOnPublicationListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnPublicationListChangedHandler
  getOnPublicationMetadataUpdatedHandler()Lkotlin/jvm/functions/Function2; = OnPublicationMetadataUpdatedHandler
  setOnPublicationMetadataUpdatedHandler(Lkotlin/jvm/functions/Function2;)V = OnPublicationMetadataUpdatedHandler
  getOnPublicationSubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationSubscribedHandler
  setOnPublicationSubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationSubscribedHandler
  getOnPublicationUnsubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationUnsubscribedHandler
  setOnPublicationUnsubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationUnsubscribedHandler
  getOnStreamPublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamPublishedHandler
  setOnStreamPublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamPublishedHandler
  getOnStreamUnpublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamUnpublishedHandler
  setOnStreamUnpublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamUnpublishedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getPublications()Ljava/util/Set; = Publications
  getRepository()Lcom/ntt/skyway/core/channel/Repository; = Repository
  getState()Lcom/ntt/skyway/core/channel/Channel$State; = State
  getSubscriptions()Ljava/util/Set; = Subscriptions
  close(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Close(Kotlin.Coroutines.IContinuation)
  create(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Create(string, string, Kotlin.Coroutines.IContinuation)
  dispose()V = Dispose()
  find(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Find(string, string, Kotlin.Coroutines.IContinuation)
  findOrCreate(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = FindOrCreate(string, string, Kotlin.Coroutines.IContinuation)
  join(Lcom/ntt/skyway/core/channel/member/Member$Init;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Join(Com.Ntt.Skyway.Core.Channel.Member.IMember.Init, Kotlin.Coroutines.IContinuation)
  leave(Lcom/ntt/skyway/core/channel/member/Member;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Leave(Com.Ntt.Skyway.Core.Channel.Member.IMember, Kotlin.Coroutines.IContinuation)
  updateMetadata(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = UpdateMetadata(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/core/channel/member/LocalPerson = Com.Ntt.Skyway.Core.Channel.Member.LocalPerson
  <init>()V = .ctor()
  getOnPublicationSubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationSubscribedHandler
  setOnPublicationSubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationSubscribedHandler
  getOnPublicationUnsubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationUnsubscribedHandler
  setOnPublicationUnsubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationUnsubscribedHandler
  getOnStreamPublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamPublishedHandler
  setOnStreamPublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamPublishedHandler
  getOnStreamUnpublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamUnpublishedHandler
  setOnStreamUnpublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamUnpublishedHandler
  getSide()Lcom/ntt/skyway/core/channel/member/Member$Side; = Side
  getSubType()Ljava/lang/String; = SubType
  getType()Lcom/ntt/skyway/core/channel/member/Member$Type; = Type
  publish(Lcom/ntt/skyway/core/content/local/LocalStream;Lcom/ntt/skyway/core/channel/Publication$Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Publish(Com.Ntt.Skyway.Core.Content.Local.LocalStream, Com.Ntt.Skyway.Core.Channel.IPublication.Options, Kotlin.Coroutines.IContinuation)
  subscribe(Lcom/ntt/skyway/core/channel/Publication;Lcom/ntt/skyway/core/channel/Subscription$Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Subscribe(Com.Ntt.Skyway.Core.Channel.IPublication, Com.Ntt.Skyway.Core.Channel.ISubscription.Options, Kotlin.Coroutines.IContinuation)
  subscribe(Ljava/lang/String;Lcom/ntt/skyway/core/channel/Subscription$Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Subscribe(string, Com.Ntt.Skyway.Core.Channel.ISubscription.Options, Kotlin.Coroutines.IContinuation)
  unpublish(Lcom/ntt/skyway/core/channel/Publication;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unpublish(Com.Ntt.Skyway.Core.Channel.IPublication, Kotlin.Coroutines.IContinuation)
  unpublish(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unpublish(string, Kotlin.Coroutines.IContinuation)
  unsubscribe(Lcom/ntt/skyway/core/channel/Subscription;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unsubscribe(Com.Ntt.Skyway.Core.Channel.ISubscription, Kotlin.Coroutines.IContinuation)
  unsubscribe(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unsubscribe(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/core/channel/member/LocalPersonImpl = Com.Ntt.Skyway.Core.Channel.Member.LocalPersonImpl
  <init>(Lcom/ntt/skyway/core/channel/member/Member$Dto;Lcom/ntt/skyway/core/channel/Repository;)V = .ctor(Com.Ntt.Skyway.Core.Channel.Member.IMember.Dto, Com.Ntt.Skyway.Core.Channel.Repository)
  PUBLISH_TIMEOUT_SEC = PublishTimeoutSec
  SUBSCRIBE_TIMEOUT_SEC = SubscribeTimeoutSec
  getChannel()Lcom/ntt/skyway/core/channel/Channel; = Channel
  getId()Ljava/lang/String; = Id
  getMetadata()Ljava/lang/String; = Metadata
  getName()Ljava/lang/String; = Name
  getNativePointer()J = NativePointer
  getOnLeftHandler()Lkotlin/jvm/functions/Function0; = OnLeftHandler
  setOnLeftHandler(Lkotlin/jvm/functions/Function0;)V = OnLeftHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnPublicationListChangedHandler()Lkotlin/jvm/functions/Function0; = OnPublicationListChangedHandler
  setOnPublicationListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnPublicationListChangedHandler
  getOnPublicationSubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationSubscribedHandler
  setOnPublicationSubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationSubscribedHandler
  getOnPublicationUnsubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationUnsubscribedHandler
  setOnPublicationUnsubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationUnsubscribedHandler
  getOnStreamPublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamPublishedHandler
  setOnStreamPublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamPublishedHandler
  getOnStreamUnpublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamUnpublishedHandler
  setOnStreamUnpublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamUnpublishedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getPublications()Ljava/util/List; = Publications
  getState()Lcom/ntt/skyway/core/channel/member/Member$State; = State
  getSubscriptions()Ljava/util/List; = Subscriptions
  leave(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Leave(Kotlin.Coroutines.IContinuation)
  publish(Lcom/ntt/skyway/core/content/local/LocalStream;Lcom/ntt/skyway/core/channel/Publication$Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Publish(Com.Ntt.Skyway.Core.Content.Local.LocalStream, Com.Ntt.Skyway.Core.Channel.IPublication.Options, Kotlin.Coroutines.IContinuation)
  subscribe(Lcom/ntt/skyway/core/channel/Publication;Lcom/ntt/skyway/core/channel/Subscription$Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Subscribe(Com.Ntt.Skyway.Core.Channel.IPublication, Com.Ntt.Skyway.Core.Channel.ISubscription.Options, Kotlin.Coroutines.IContinuation)
  subscribe(Ljava/lang/String;Lcom/ntt/skyway/core/channel/Subscription$Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Subscribe(string, Com.Ntt.Skyway.Core.Channel.ISubscription.Options, Kotlin.Coroutines.IContinuation)
  unpublish(Lcom/ntt/skyway/core/channel/Publication;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unpublish(Com.Ntt.Skyway.Core.Channel.IPublication, Kotlin.Coroutines.IContinuation)
  unpublish(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unpublish(string, Kotlin.Coroutines.IContinuation)
  unsubscribe(Lcom/ntt/skyway/core/channel/Subscription;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unsubscribe(Com.Ntt.Skyway.Core.Channel.ISubscription, Kotlin.Coroutines.IContinuation)
  unsubscribe(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unsubscribe(string, Kotlin.Coroutines.IContinuation)
  updateMetadata(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = UpdateMetadata(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/core/channel/member/Member = Com.Ntt.Skyway.Core.Channel.Member.IMember
  getChannel()Lcom/ntt/skyway/core/channel/Channel; = Channel
  getId()Ljava/lang/String; = Id
  getMetadata()Ljava/lang/String; = Metadata
  getName()Ljava/lang/String; = Name
  getNativePointer()J = NativePointer
  getOnLeftHandler()Lkotlin/jvm/functions/Function0; = OnLeftHandler
  setOnLeftHandler(Lkotlin/jvm/functions/Function0;)V = OnLeftHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnPublicationListChangedHandler()Lkotlin/jvm/functions/Function0; = OnPublicationListChangedHandler
  setOnPublicationListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnPublicationListChangedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getPublications()Ljava/util/List; = Publications
  getSubscriptions()Ljava/util/List; = Subscriptions
  getSubType()Ljava/lang/String; = SubType
  getSide()Lcom/ntt/skyway/core/channel/member/Member$Side; = GetSide()
  getState()Lcom/ntt/skyway/core/channel/member/Member$State; = GetState()
  getType()Lcom/ntt/skyway/core/channel/member/Member$Type; = GetType()
  leave(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Leave(Kotlin.Coroutines.IContinuation)
  updateMetadata(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = UpdateMetadata(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/core/channel/member/RemoteMember = Com.Ntt.Skyway.Core.Channel.Member.RemoteMember
  <init>()V = .ctor()
  getSide()Lcom/ntt/skyway/core/channel/member/Member$Side; = Side
com/ntt/skyway/core/channel/member/RemoteMemberImpl = Com.Ntt.Skyway.Core.Channel.Member.RemoteMemberImpl
  <init>(Lcom/ntt/skyway/core/channel/member/Member$Dto;)V = .ctor(Com.Ntt.Skyway.Core.Channel.Member.IMember.Dto)
  getChannel()Lcom/ntt/skyway/core/channel/Channel; = Channel
  getId()Ljava/lang/String; = Id
  getMetadata()Ljava/lang/String; = Metadata
  getName()Ljava/lang/String; = Name
  getNativePointer()J = NativePointer
  getOnLeftHandler()Lkotlin/jvm/functions/Function0; = OnLeftHandler
  setOnLeftHandler(Lkotlin/jvm/functions/Function0;)V = OnLeftHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnPublicationListChangedHandler()Lkotlin/jvm/functions/Function0; = OnPublicationListChangedHandler
  setOnPublicationListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnPublicationListChangedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getPublications()Ljava/util/List; = Publications
  getState()Lcom/ntt/skyway/core/channel/member/Member$State; = State
  getSubscriptions()Ljava/util/List; = Subscriptions
  leave(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Leave(Kotlin.Coroutines.IContinuation)
  updateMetadata(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = UpdateMetadata(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/core/channel/Publication = Com.Ntt.Skyway.Core.Channel.IPublication
  getChannel()Lcom/ntt/skyway/core/channel/Channel; = Channel
  getCodecCapabilities()Ljava/util/List; = CodecCapabilities
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  getEncodings()Ljava/util/List; = Encodings
  getId()Ljava/lang/String; = Id
  getMetadata()Ljava/lang/String; = Metadata
  getNativePointer()J = NativePointer
  getOnConnectionStateChangedHandler()Lkotlin/jvm/functions/Function1; = OnConnectionStateChangedHandler
  setOnConnectionStateChangedHandler(Lkotlin/jvm/functions/Function1;)V = OnConnectionStateChangedHandler
  getOnDisabledHandler()Lkotlin/jvm/functions/Function0; = OnDisabledHandler
  setOnDisabledHandler(Lkotlin/jvm/functions/Function0;)V = OnDisabledHandler
  getOnEnabledHandler()Lkotlin/jvm/functions/Function0; = OnEnabledHandler
  setOnEnabledHandler(Lkotlin/jvm/functions/Function0;)V = OnEnabledHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnSubscribedHandler()Lkotlin/jvm/functions/Function1; = OnSubscribedHandler
  setOnSubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnSubscribedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getOnUnpublishedHandler()Lkotlin/jvm/functions/Function0; = OnUnpublishedHandler
  setOnUnpublishedHandler(Lkotlin/jvm/functions/Function0;)V = OnUnpublishedHandler
  getOnUnsubscribedHandler()Lkotlin/jvm/functions/Function1; = OnUnsubscribedHandler
  setOnUnsubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnUnsubscribedHandler
  getOrigin()Lcom/ntt/skyway/core/channel/Publication; = Origin
  getPublisher()Lcom/ntt/skyway/core/channel/member/Member; = Publisher
  getStream()Lcom/ntt/skyway/core/content/Stream; = Stream
  getSubscriptions()Ljava/util/List; = Subscriptions
  cancel(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Cancel(Kotlin.Coroutines.IContinuation)
  disable(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Disable(Kotlin.Coroutines.IContinuation)
  enable(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Enable(Kotlin.Coroutines.IContinuation)
  getState()Lcom/ntt/skyway/core/channel/Publication$State; = GetState()
  getStats(Ljava/lang/String;)Lcom/ntt/skyway/core/content/WebRTCStats; = GetStats(string)
  replaceStream(Lcom/ntt/skyway/core/content/local/LocalStream;)V = ReplaceStream(Com.Ntt.Skyway.Core.Content.Local.LocalStream)
  updateEncodings(Ljava/util/List;)V = UpdateEncodings(System.Collections.Generic.IList<Com.Ntt.Skyway.Core.Content.Encoding>)
  updateMetadata(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = UpdateMetadata(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/core/channel/PublicationImpl = Com.Ntt.Skyway.Core.Channel.PublicationImpl
  getChannel()Lcom/ntt/skyway/core/channel/Channel; = Channel
  getCodecCapabilities()Ljava/util/List; = CodecCapabilities
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  getEncodings()Ljava/util/List; = Encodings
  getId()Ljava/lang/String; = Id
  getMetadata()Ljava/lang/String; = Metadata
  getNativePointer()J = NativePointer
  getOnConnectionStateChangedHandler()Lkotlin/jvm/functions/Function1; = OnConnectionStateChangedHandler
  setOnConnectionStateChangedHandler(Lkotlin/jvm/functions/Function1;)V = OnConnectionStateChangedHandler
  getOnDisabledHandler()Lkotlin/jvm/functions/Function0; = OnDisabledHandler
  setOnDisabledHandler(Lkotlin/jvm/functions/Function0;)V = OnDisabledHandler
  getOnEnabledHandler()Lkotlin/jvm/functions/Function0; = OnEnabledHandler
  setOnEnabledHandler(Lkotlin/jvm/functions/Function0;)V = OnEnabledHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnSubscribedHandler()Lkotlin/jvm/functions/Function1; = OnSubscribedHandler
  setOnSubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnSubscribedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getOnUnpublishedHandler()Lkotlin/jvm/functions/Function0; = OnUnpublishedHandler
  setOnUnpublishedHandler(Lkotlin/jvm/functions/Function0;)V = OnUnpublishedHandler
  getOnUnsubscribedHandler()Lkotlin/jvm/functions/Function1; = OnUnsubscribedHandler
  setOnUnsubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnUnsubscribedHandler
  getOrigin()Lcom/ntt/skyway/core/channel/Publication; = Origin
  getPublisher()Lcom/ntt/skyway/core/channel/member/Member; = Publisher
  getState()Lcom/ntt/skyway/core/channel/Publication$State; = State
  getStream()Lcom/ntt/skyway/core/content/local/LocalStream; = Stream
  getSubscriptions()Ljava/util/List; = Subscriptions
  cancel(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Cancel(Kotlin.Coroutines.IContinuation)
  disable(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Disable(Kotlin.Coroutines.IContinuation)
  enable(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Enable(Kotlin.Coroutines.IContinuation)
  getStats(Ljava/lang/String;)Lcom/ntt/skyway/core/content/WebRTCStats; = GetStats(string)
  replaceStream(Lcom/ntt/skyway/core/content/local/LocalStream;)V = ReplaceStream(Com.Ntt.Skyway.Core.Content.Local.LocalStream)
  updateEncodings(Ljava/util/List;)V = UpdateEncodings(System.Collections.Generic.IList<Com.Ntt.Skyway.Core.Content.Encoding>)
  updateMetadata(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = UpdateMetadata(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/core/channel/Repository = Com.Ntt.Skyway.Core.Channel.Repository
  <init>(Lcom/ntt/skyway/core/channel/ChannelImpl;)V = .ctor(Com.Ntt.Skyway.Core.Channel.ChannelImpl)
  getAvailableMembers()Ljava/util/Set; = AvailableMembers
  getAvailablePublications()Ljava/util/Set; = AvailablePublications
  getAvailableSubscriptions()Ljava/util/Set; = AvailableSubscriptions
  getMembers()Ljava/util/Set; = Members
  getPublications()Ljava/util/List; = Publications
  getSubscriptions()Ljava/util/List; = Subscriptions
com/ntt/skyway/core/channel/Subscription = Com.Ntt.Skyway.Core.Channel.ISubscription
  getChannel()Lcom/ntt/skyway/core/channel/Channel; = Channel
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  getId()Ljava/lang/String; = Id
  getNativePointer()J = NativePointer
  getOnCanceledHandler()Lkotlin/jvm/functions/Function0; = OnCanceledHandler
  setOnCanceledHandler(Lkotlin/jvm/functions/Function0;)V = OnCanceledHandler
  getOnConnectionStateChangedHandler()Lkotlin/jvm/functions/Function1; = OnConnectionStateChangedHandler
  setOnConnectionStateChangedHandler(Lkotlin/jvm/functions/Function1;)V = OnConnectionStateChangedHandler
  getPreferredEncodingId()Ljava/lang/String; = PreferredEncodingId
  getPublication()Lcom/ntt/skyway/core/channel/Publication; = Publication
  getStats()Lcom/ntt/skyway/core/content/WebRTCStats; = Stats
  getStream()Lcom/ntt/skyway/core/content/remote/RemoteStream; = Stream
  getSubscriber()Lcom/ntt/skyway/core/channel/member/Member; = Subscriber
  cancel(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Cancel(Kotlin.Coroutines.IContinuation)
  changePreferredEncoding(Ljava/lang/String;)V = ChangePreferredEncoding(string)
  getState()Lcom/ntt/skyway/core/channel/Subscription$State; = GetState()
com/ntt/skyway/core/channel/SubscriptionImpl = Com.Ntt.Skyway.Core.Channel.SubscriptionImpl
  getChannel()Lcom/ntt/skyway/core/channel/Channel; = Channel
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  getId()Ljava/lang/String; = Id
  getNativePointer()J = NativePointer
  getOnCanceledHandler()Lkotlin/jvm/functions/Function0; = OnCanceledHandler
  setOnCanceledHandler(Lkotlin/jvm/functions/Function0;)V = OnCanceledHandler
  getOnConnectionStateChangedHandler()Lkotlin/jvm/functions/Function1; = OnConnectionStateChangedHandler
  setOnConnectionStateChangedHandler(Lkotlin/jvm/functions/Function1;)V = OnConnectionStateChangedHandler
  getPreferredEncodingId()Ljava/lang/String; = PreferredEncodingId
  getPublication()Lcom/ntt/skyway/core/channel/Publication; = Publication
  getState()Lcom/ntt/skyway/core/channel/Subscription$State; = State
  getStats()Lcom/ntt/skyway/core/content/WebRTCStats; = Stats
  getStream()Lcom/ntt/skyway/core/content/remote/RemoteStream; = Stream
  getSubscriber()Lcom/ntt/skyway/core/channel/member/Member; = Subscriber
  cancel(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Cancel(Kotlin.Coroutines.IContinuation)
  changePreferredEncoding(Ljava/lang/String;)V = ChangePreferredEncoding(string)
com/ntt/skyway/core/content/Codec = Com.Ntt.Skyway.Core.Content.Codec
  <init>(Lcom/ntt/skyway/core/content/Codec$MimeType;)V = .ctor(Com.Ntt.Skyway.Core.Content.Codec.MimeType)
  <init>(Ljava/lang/String;)V = .ctor(string)
  Companion = Companion
  component1()Ljava/lang/String; = Component1()
  copy(Ljava/lang/String;)Lcom/ntt/skyway/core/content/Codec; = Copy(string)
  getMimeType()Ljava/lang/String; = GetMimeType()
com/ntt/skyway/core/content/Encoding = Com.Ntt.Skyway.Core.Content.Encoding
  <init>(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Double;Ljava/lang/Double;)V = .ctor(string, Java.Lang.Integer, Java.Lang.Double, Java.Lang.Double)
  Companion = Companion
  getId()Ljava/lang/String; = Id
  getMaxBitrate()Ljava/lang/Integer; = MaxBitrate
  getMaxFramerate()Ljava/lang/Double; = MaxFramerate
  getScaleResolutionDownBy()Ljava/lang/Double; = ScaleResolutionDownBy
  component1()Ljava/lang/String; = Component1()
  component2()Ljava/lang/Integer; = Component2()
  component3()Ljava/lang/Double; = Component3()
  component4()Ljava/lang/Double; = Component4()
  copy(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Double;Ljava/lang/Double;)Lcom/ntt/skyway/core/content/Encoding; = Copy(string, Java.Lang.Integer, Java.Lang.Double, Java.Lang.Double)
com/ntt/skyway/core/content/local/LocalAudioStream = Com.Ntt.Skyway.Core.Content.Local.LocalAudioStream
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  getTrack()Lorg/webrtc/AudioTrack; = Track
  dispose()V = Dispose()
  setVolume(D)V = SetVolume(double)
com/ntt/skyway/core/content/local/LocalDataStream = Com.Ntt.Skyway.Core.Content.Local.LocalDataStream
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  dispose()V = Dispose()
  write([B)V = Write(byte[])
  write(Ljava/lang/String;)V = Write(string)
com/ntt/skyway/core/content/local/LocalStream = Com.Ntt.Skyway.Core.Content.Local.LocalStream
  getSide()Lcom/ntt/skyway/core/content/Stream$Side; = GetSide()
com/ntt/skyway/core/content/local/LocalVideoStream = Com.Ntt.Skyway.Core.Content.Local.LocalVideoStream
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  addRenderer(Lcom/ntt/skyway/core/content/sink/Renderer;)V = AddRenderer(Com.Ntt.Skyway.Core.Content.Sink.IRenderer)
  dispose()V = Dispose()
  removeAllRenderer()V = RemoveAllRenderer()
  removeRenderer(Lcom/ntt/skyway/core/content/sink/Renderer;)V = RemoveRenderer(Com.Ntt.Skyway.Core.Content.Sink.IRenderer)
com/ntt/skyway/core/content/local/source/AudioSource = Com.Ntt.Skyway.Core.Content.Local.Source.AudioSource
  INSTANCE = Instance
  getAudioRecord()Landroid/media/AudioRecord; = AudioRecord
  isStarted()Z = IsStarted
  getOnAudioBufferHandler()Lkotlin/jvm/functions/Function1; = OnAudioBufferHandler
  setOnAudioBufferHandler(Lkotlin/jvm/functions/Function1;)V = OnAudioBufferHandler
  changeRecord(Landroid/media/AudioRecord;)V = ChangeRecord(Android.Media.AudioRecord)
  createStream()Lcom/ntt/skyway/core/content/local/LocalAudioStream; = CreateStream()
  start()V = Start()
  stop()V = Stop()
com/ntt/skyway/core/content/local/source/CameraSource = Com.Ntt.Skyway.Core.Content.Local.Source.CameraSource
  INSTANCE = Instance
  getOnCameraChangedHandler()Lkotlin/jvm/functions/Function1; = OnCameraChangedHandler
  setOnCameraChangedHandler(Lkotlin/jvm/functions/Function1;)V = OnCameraChangedHandler
  getOnCameraChangeErrorHandler()Lkotlin/jvm/functions/Function1; = OnCameraChangeErrorHandler
  setOnCameraChangeErrorHandler(Lkotlin/jvm/functions/Function1;)V = OnCameraChangeErrorHandler
  changeCamera(Ljava/lang/String;)V = ChangeCamera(string)
  getBackCameras(Landroid/content/Context;)Ljava/util/Set; = GetBackCameras(Android.Content.Context)
  getCameras(Landroid/content/Context;)Ljava/util/Set; = GetCameras(Android.Content.Context)
  getFrontCameras(Landroid/content/Context;)Ljava/util/Set; = GetFrontCameras(Android.Content.Context)
  startCapturing(Landroid/content/Context;Ljava/lang/String;Lcom/ntt/skyway/core/content/local/source/CameraSource$CapturingOptions;)V = StartCapturing(Android.Content.Context, string, Com.Ntt.Skyway.Core.Content.Local.Source.CameraSource.CapturingOptions)
  stopCapturing()V = StopCapturing()
com/ntt/skyway/core/content/local/source/CustomVideoFrameSource = Com.Ntt.Skyway.Core.Content.Local.Source.CustomVideoFrameSource
  <init>(II)V = .ctor(int, int)
  updateFrame(Landroid/graphics/Bitmap;I)V = UpdateFrame(Android.Graphics.Bitmap, int)
com/ntt/skyway/core/content/local/source/DataSource = Com.Ntt.Skyway.Core.Content.Local.Source.DataSource
  <init>()V = .ctor()
  createStream()Lcom/ntt/skyway/core/content/local/LocalDataStream; = CreateStream()
com/ntt/skyway/core/content/local/source/ScreenSource = Com.Ntt.Skyway.Core.Content.Local.Source.ScreenSource
  INSTANCE = Instance
  setup(Landroid/content/Context;Landroid/content/Intent;)V = Setup(Android.Content.Context, Android.Content.Intent)
  startCapturing(III)V = StartCapturing(int, int, int)
  stopCapturing()V = StopCapturing()
com/ntt/skyway/core/content/local/source/VideoFileSource = Com.Ntt.Skyway.Core.Content.Local.Source.VideoFileSource
  <init>(Landroid/content/Context;Ljava/lang/String;)V = .ctor(Android.Content.Context, string)
  startCapturing(III)V = StartCapturing(int, int, int)
  stopCapturing()V = StopCapturing()
com/ntt/skyway/core/content/local/source/VideoSource = Com.Ntt.Skyway.Core.Content.Local.Source.VideoSource
  <init>()V = .ctor()
  source = Source
  textureHelper = TextureHelper
  getSource()Lorg/webrtc/VideoSource; = Source
  setSource(Lorg/webrtc/VideoSource;)V = Source
  getTextureHelper()Lorg/webrtc/SurfaceTextureHelper; = TextureHelper
  setTextureHelper(Lorg/webrtc/SurfaceTextureHelper;)V = TextureHelper
  getYuvConverter()Lorg/webrtc/YuvConverter; = YuvConverter
  createStream()Lcom/ntt/skyway/core/content/local/LocalVideoStream; = CreateStream()
com/ntt/skyway/core/content/remote/RemoteAudioStream = Com.Ntt.Skyway.Core.Content.Remote.RemoteAudioStream
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  dispose()V = Dispose()
  setVolume(D)V = SetVolume(double)
com/ntt/skyway/core/content/remote/RemoteDataStream = Com.Ntt.Skyway.Core.Content.Remote.RemoteDataStream
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  getOnDataBufferHandler()Lkotlin/jvm/functions/Function1; = OnDataBufferHandler
  setOnDataBufferHandler(Lkotlin/jvm/functions/Function1;)V = OnDataBufferHandler
  getOnDataHandler()Lkotlin/jvm/functions/Function1; = OnDataHandler
  setOnDataHandler(Lkotlin/jvm/functions/Function1;)V = OnDataHandler
  dispose()V = Dispose()
com/ntt/skyway/core/content/remote/RemoteStream = Com.Ntt.Skyway.Core.Content.Remote.RemoteStream
  getSide()Lcom/ntt/skyway/core/content/Stream$Side; = GetSide()
com/ntt/skyway/core/content/remote/RemoteVideoStream = Com.Ntt.Skyway.Core.Content.Remote.RemoteVideoStream
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  addRenderer(Lcom/ntt/skyway/core/content/sink/Renderer;)V = AddRenderer(Com.Ntt.Skyway.Core.Content.Sink.IRenderer)
  dispose()V = Dispose()
  removeAllRenderer()V = RemoveAllRenderer()
  removeRenderer(Lcom/ntt/skyway/core/content/sink/Renderer;)V = RemoveRenderer(Com.Ntt.Skyway.Core.Content.Sink.IRenderer)
com/ntt/skyway/core/content/sink/AudioDestination = Com.Ntt.Skyway.Core.Content.Sink.AudioDestination
  INSTANCE = Instance
  getAudioTrack()Landroid/media/AudioTrack; = AudioTrack
  getOnAudioBufferHandler()Lkotlin/jvm/functions/Function1; = OnAudioBufferHandler
  setOnAudioBufferHandler(Lkotlin/jvm/functions/Function1;)V = OnAudioBufferHandler
  changeTrack(Landroid/media/AudioTrack;)V = ChangeTrack(Android.Media.AudioTrack)
com/ntt/skyway/core/content/sink/CustomRenderer = Com.Ntt.Skyway.Core.Content.Sink.CustomRenderer
  <init>()V = .ctor()
  getOnFrameHandler()Lkotlin/jvm/functions/Function1; = OnFrameHandler
  setOnFrameHandler(Lkotlin/jvm/functions/Function1;)V = OnFrameHandler
  isSetup()Z = Setup
  setSetup(Z)V = Setup
  getSink()Lorg/webrtc/VideoSink; = Sink
  dispose()V = Dispose()
com/ntt/skyway/core/content/sink/Renderer = Com.Ntt.Skyway.Core.Content.Sink.IRenderer
  isSetup()Z = Setup
  setSetup(Z)V = Setup
  getSink()Lorg/webrtc/VideoSink; = Sink
  dispose()V = Dispose()
com/ntt/skyway/core/content/sink/SurfaceViewRenderer = Com.Ntt.Skyway.Core.Content.Sink.SurfaceViewRenderer
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  sink = Sink
  isSetup()Z = Setup
  setSetup(Z)V = Setup
  getSink()Lorg/webrtc/SurfaceViewRenderer; = Sink
  setSink(Lorg/webrtc/SurfaceViewRenderer;)V = Sink
  dispose()V = Dispose()
  setup(Lcom/ntt/skyway/core/content/sink/SurfaceViewRenderer$LayoutParam;Lcom/ntt/skyway/core/content/sink/SurfaceViewRenderer$LayoutParam;)V = InvokeSetup(Com.Ntt.Skyway.Core.Content.Sink.SurfaceViewRenderer.LayoutParam, Com.Ntt.Skyway.Core.Content.Sink.SurfaceViewRenderer.LayoutParam)
  setScalingType(Lcom/ntt/skyway/core/content/sink/SurfaceViewRenderer$ScalingType;)V = SetScalingType(Com.Ntt.Skyway.Core.Content.Sink.SurfaceViewRenderer.ScalingType)
com/ntt/skyway/core/content/Stream = Com.Ntt.Skyway.Core.Content.Stream
  <init>(Ljava/lang/String;J)V = .ctor(string, long)
  getId()Ljava/lang/String; = Id
  dispose()V = Dispose()
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = GetContentType()
  getSide()Lcom/ntt/skyway/core/content/Stream$Side; = GetSide()
com/ntt/skyway/core/content/WebRTCStats = Com.Ntt.Skyway.Core.Content.WebRTCStats
  <init>(Ljava/util/List;)V = .ctor(System.Collections.Generic.IList<Com.Ntt.Skyway.Core.Content.WebRTCStatsReport>)
  getReports()Ljava/util/List; = Reports
  component1()Ljava/util/List; = Component1()
  copy(Ljava/util/List;)Lcom/ntt/skyway/core/content/WebRTCStats; = Copy(System.Collections.Generic.IList<Com.Ntt.Skyway.Core.Content.WebRTCStatsReport>)
com/ntt/skyway/core/content/WebRTCStatsReport = Com.Ntt.Skyway.Core.Content.WebRTCStatsReport
  getId()Ljava/lang/String; = Id
  getType()Ljava/lang/String; = Type
  component1()Ljava/lang/String; = Component1()
  component2()Ljava/lang/String; = Component2()
com/ntt/skyway/core/network/HttpClient = Com.Ntt.Skyway.Core.Network.HttpClient
  INSTANCE = Instance
com/ntt/skyway/core/network/WebSocketClient = Com.Ntt.Skyway.Core.Network.WebSocketClient
  <init>()V = .ctor()
com/ntt/skyway/core/network/WebSocketClientFactory = Com.Ntt.Skyway.Core.Network.WebSocketClientFactory
  INSTANCE = Instance
  create()Lcom/ntt/skyway/core/network/WebSocketClient; = Create()
com/ntt/skyway/core/SkyWayContext = Com.Ntt.Skyway.Core.SkyWayContext
  INSTANCE = Instance
  version = Version
  isSetup()Z = IsSetup
  getOnErrorHandler()Lkotlin/jvm/functions/Function1; = OnErrorHandler
  setOnErrorHandler(Lkotlin/jvm/functions/Function1;)V = OnErrorHandler
  getOnReconnectStartHandler()Lkotlin/jvm/functions/Function0; = OnReconnectStartHandler
  setOnReconnectStartHandler(Lkotlin/jvm/functions/Function0;)V = OnReconnectStartHandler
  getOnReconnectSuccessHandler()Lkotlin/jvm/functions/Function0; = OnReconnectSuccessHandler
  setOnReconnectSuccessHandler(Lkotlin/jvm/functions/Function0;)V = OnReconnectSuccessHandler
  getOnTokenExpiredHandler()Lkotlin/jvm/functions/Function0; = OnTokenExpiredHandler
  setOnTokenExpiredHandler(Lkotlin/jvm/functions/Function0;)V = OnTokenExpiredHandler
  getOnTokenRefreshingNeededHandler()Lkotlin/jvm/functions/Function0; = OnTokenRefreshingNeededHandler
  setOnTokenRefreshingNeededHandler(Lkotlin/jvm/functions/Function0;)V = OnTokenRefreshingNeededHandler
  getPlugins()Ljava/util/List; = Plugins
  _updateRtcConfig(Lcom/ntt/skyway/core/SkyWayContext$RtcConfig;)V = _updateRtcConfig(Com.Ntt.Skyway.Core.SkyWayContext.RtcConfig)
  dispose()V = Dispose()
  findPlugin(Ljava/lang/String;)Lcom/ntt/skyway/plugin/Plugin; = FindPlugin(string)
  onFatalError(Ljava/lang/String;)V = OnFatalError(string)
  onReconnectStart()V = OnReconnectStart()
  onReconnectSuccess()V = OnReconnectSuccess()
  onTokenExpired()V = OnTokenExpired()
  onTokenRefreshingNeeded()V = OnTokenRefreshingNeeded()
  registerPlugin(Lcom/ntt/skyway/plugin/Plugin;)V = RegisterPlugin(Com.Ntt.Skyway.Plugin.IPlugin)
  setup(Landroid/content/Context;Lcom/ntt/skyway/core/SkyWayContext$Options;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Setup(Android.Content.Context, Com.Ntt.Skyway.Core.SkyWayContext.Options, Kotlin.Jvm.Functions.IFunction1, Kotlin.Coroutines.IContinuation)
  updateAuthToken(Ljava/lang/String;)Z = UpdateAuthToken(string)
com/ntt/skyway/core/SkyWayOptIn = Com.Ntt.Skyway.Core.ISkyWayOptIn
com/ntt/skyway/core/util/Logger = Com.Ntt.Skyway.Core.Util.Logger
  INSTANCE = Instance
  getWebRTCLog()Z = WebRTCLog
  setWebRTCLog(Z)V = WebRTCLog
  getLogLevel()Lcom/ntt/skyway/core/util/Logger$LogLevel; = GetLogLevel()
  log(Lcom/ntt/skyway/core/util/Logger$LogLevel;Ljava/lang/String;)V = Log(Com.Ntt.Skyway.Core.Util.Logger.LogLevel, string)
  log(Lcom/ntt/skyway/core/util/Logger$LogLevel;Ljava/lang/String;Ljava/lang/String;)V = Log(Com.Ntt.Skyway.Core.Util.Logger.LogLevel, string, string)
  log(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V = Log(int, string, string, string, int)
  logD(Ljava/lang/String;)V = LogD(string)
  logE(Ljava/lang/String;)V = LogE(string)
  logI(Ljava/lang/String;)V = LogI(string)
  logV(Ljava/lang/String;)V = LogV(string)
  logW(Ljava/lang/String;)V = LogW(string)
  setLogLevel(Lcom/ntt/skyway/core/util/Logger$LogLevel;)V = SetLogLevel(Com.Ntt.Skyway.Core.Util.Logger.LogLevel)
com/ntt/skyway/plugin/Plugin = Com.Ntt.Skyway.Plugin.IPlugin
  getName()Ljava/lang/String; = Name
  createRemoteMember(Lcom/ntt/skyway/core/channel/member/Member$Dto;)Lcom/ntt/skyway/core/channel/member/RemoteMember; = CreateRemoteMember(Com.Ntt.Skyway.Core.Channel.Member.IMember.Dto)
com/ntt/skyway/plugin/remotePerson/RemotePerson = Com.Ntt.Skyway.Plugin.RemotePerson.RemotePerson
  getSubType()Ljava/lang/String; = SubType
  getType()Lcom/ntt/skyway/core/channel/member/Member$Type; = Type
  subscribe(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Subscribe(string, Kotlin.Coroutines.IContinuation)
  unsubscribe(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unsubscribe(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/plugin/remotePerson/RemotePersonPlugin = Com.Ntt.Skyway.Plugin.RemotePerson.RemotePersonPlugin
  <init>()V = .ctor()
  getName()Ljava/lang/String; = Name
  createRemoteMember(Lcom/ntt/skyway/core/channel/member/Member$Dto;)Lcom/ntt/skyway/core/channel/member/RemoteMember; = CreateRemoteMember(Com.Ntt.Skyway.Core.Channel.Member.IMember.Dto)
com/ntt/skyway/plugin/sfubot/BuildConfig = Com.Ntt.Skyway.Plugin.Sfubot.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  LIBRARY_PACKAGE_NAME = LibraryPackageName
com/ntt/skyway/plugin/sfuBot/Forwarding = Com.Ntt.Skyway.Plugin.SfuBot.Forwarding
  getChannel()Lcom/ntt/skyway/core/channel/Channel; = Channel
  getId()Ljava/lang/String; = Id
  getOriginPublication()Lcom/ntt/skyway/core/channel/Publication; = OriginPublication
  getRelayingPublication()Lcom/ntt/skyway/core/channel/Publication; = RelayingPublication
  getConfigure()Lcom/ntt/skyway/plugin/sfuBot/Forwarding$Configure; = GetConfigure()
com/ntt/skyway/plugin/sfuBot/SFUBot = Com.Ntt.Skyway.Plugin.SfuBot.SFUBot
  Companion = Companion
  getForwardings()Ljava/util/Set; = Forwardings
  getSubType()Ljava/lang/String; = SubType
  getType()Lcom/ntt/skyway/core/channel/member/Member$Type; = Type
  createBot(Lcom/ntt/skyway/core/channel/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = CreateBot(Com.Ntt.Skyway.Core.Channel.IChannel, Kotlin.Coroutines.IContinuation)
  startForwarding(Lcom/ntt/skyway/core/channel/Publication;Lcom/ntt/skyway/plugin/sfuBot/Forwarding$Configure;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = StartForwarding(Com.Ntt.Skyway.Core.Channel.IPublication, Com.Ntt.Skyway.Plugin.SfuBot.Forwarding.Configure, Kotlin.Coroutines.IContinuation)
  stopForwarding(Lcom/ntt/skyway/plugin/sfuBot/Forwarding;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = StopForwarding(Com.Ntt.Skyway.Plugin.SfuBot.Forwarding, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/plugin/sfuBot/SFUBotPlugin = Com.Ntt.Skyway.Plugin.SfuBot.SFUBotPlugin
  <init>()V = .ctor()
  getName()Ljava/lang/String; = Name
  createRemoteMember(Lcom/ntt/skyway/core/channel/member/Member$Dto;)Lcom/ntt/skyway/core/channel/member/RemoteMember; = CreateRemoteMember(Com.Ntt.Skyway.Core.Channel.Member.IMember.Dto)
com/ntt/skyway/plugin/unknown/Unknown = Com.Ntt.Skyway.Plugin.Unknown.Unknown
  getSubType()Ljava/lang/String; = SubType
  getType()Lcom/ntt/skyway/core/channel/member/Member$Type; = Type
com/ntt/skyway/plugin/unknown/UnknownPlugin = Com.Ntt.Skyway.Plugin.Unknown.UnknownPlugin
  INSTANCE = Instance
  getName()Ljava/lang/String; = Name
  createRemoteMember(Lcom/ntt/skyway/core/channel/member/Member$Dto;)Lcom/ntt/skyway/core/channel/member/RemoteMember; = CreateRemoteMember(Com.Ntt.Skyway.Core.Channel.Member.IMember.Dto)
com/ntt/skyway/room/BuildConfig = Com.Ntt.Skyway.Room.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  LIBRARY_PACKAGE_NAME = LibraryPackageName
com/ntt/skyway/room/member/LocalRoomMember = Com.Ntt.Skyway.Room.Member.LocalRoomMember
  getOnPublicationSubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationSubscribedHandler
  setOnPublicationSubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationSubscribedHandler
  getOnPublicationUnsubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationUnsubscribedHandler
  setOnPublicationUnsubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationUnsubscribedHandler
  getOnStreamPublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamPublishedHandler
  setOnStreamPublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamPublishedHandler
  getOnStreamUnpublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamUnpublishedHandler
  setOnStreamUnpublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamUnpublishedHandler
  publish(Lcom/ntt/skyway/core/content/local/LocalStream;Lcom/ntt/skyway/room/RoomPublication$Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Publish(Com.Ntt.Skyway.Core.Content.Local.LocalStream, Com.Ntt.Skyway.Room.RoomPublication.Options, Kotlin.Coroutines.IContinuation)
  subscribe(Lcom/ntt/skyway/room/RoomPublication;Lcom/ntt/skyway/room/RoomSubscription$Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Subscribe(Com.Ntt.Skyway.Room.RoomPublication, Com.Ntt.Skyway.Room.RoomSubscription.Options, Kotlin.Coroutines.IContinuation)
  subscribe(Ljava/lang/String;Lcom/ntt/skyway/room/RoomSubscription$Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Subscribe(string, Com.Ntt.Skyway.Room.RoomSubscription.Options, Kotlin.Coroutines.IContinuation)
  unpublish(Lcom/ntt/skyway/room/RoomPublication;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unpublish(Com.Ntt.Skyway.Room.RoomPublication, Kotlin.Coroutines.IContinuation)
  unsubscribe(Lcom/ntt/skyway/core/channel/Subscription;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unsubscribe(Com.Ntt.Skyway.Core.Channel.ISubscription, Kotlin.Coroutines.IContinuation)
  unsubscribe(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unsubscribe(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/room/member/RemoteRoomMember = Com.Ntt.Skyway.Room.Member.RemoteRoomMember
  subscribe(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Subscribe(string, Kotlin.Coroutines.IContinuation)
  unsubscribe(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unsubscribe(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/room/member/RoomMember = Com.Ntt.Skyway.Room.Member.RoomMember
  getId()Ljava/lang/String; = Id
  getMetadata()Ljava/lang/String; = Metadata
  getName()Ljava/lang/String; = Name
  getOnLeftHandler()Lkotlin/jvm/functions/Function0; = OnLeftHandler
  setOnLeftHandler(Lkotlin/jvm/functions/Function0;)V = OnLeftHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnPublicationListChangedHandler()Lkotlin/jvm/functions/Function0; = OnPublicationListChangedHandler
  setOnPublicationListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnPublicationListChangedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getPublications()Ljava/util/List; = Publications
  getRoom()Lcom/ntt/skyway/room/Room; = Room
  getSide()Lcom/ntt/skyway/core/channel/member/Member$Side; = Side
  getState()Lcom/ntt/skyway/core/channel/member/Member$State; = State
  getSubscriptions()Ljava/util/List; = Subscriptions
  leave(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Leave(Kotlin.Coroutines.IContinuation)
  updateMetadata(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = UpdateMetadata(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/room/p2p/LocalP2PRoomMember = Com.Ntt.Skyway.Room.P2p.LocalP2PRoomMember
com/ntt/skyway/room/p2p/P2PRoom = Com.Ntt.Skyway.Room.P2p.P2PRoom
  Companion = Companion
  create(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Create(string, string, Kotlin.Coroutines.IContinuation)
  find(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Find(string, string, Kotlin.Coroutines.IContinuation)
  findOrCreate(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = FindOrCreate(string, string, Kotlin.Coroutines.IContinuation)
  getType()Lcom/ntt/skyway/room/Room$Type; = GetType()
  join(Lcom/ntt/skyway/room/member/RoomMember$Init;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Join(Com.Ntt.Skyway.Room.Member.RoomMember.Init, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/room/Room = Com.Ntt.Skyway.Room.Room
  getId()Ljava/lang/String; = Id
  getLocalRoomMember()Lcom/ntt/skyway/room/member/LocalRoomMember; = LocalRoomMember
  getMembers()Ljava/util/Set; = Members
  getMetadata()Ljava/lang/String; = Metadata
  getName()Ljava/lang/String; = Name
  getOnClosedHandler()Lkotlin/jvm/functions/Function0; = OnClosedHandler
  setOnClosedHandler(Lkotlin/jvm/functions/Function0;)V = OnClosedHandler
  getOnErrorHandler()Lkotlin/jvm/functions/Function1; = OnErrorHandler
  setOnErrorHandler(Lkotlin/jvm/functions/Function1;)V = OnErrorHandler
  getOnMemberJoinedHandler()Lkotlin/jvm/functions/Function1; = OnMemberJoinedHandler
  setOnMemberJoinedHandler(Lkotlin/jvm/functions/Function1;)V = OnMemberJoinedHandler
  getOnMemberLeftHandler()Lkotlin/jvm/functions/Function1; = OnMemberLeftHandler
  setOnMemberLeftHandler(Lkotlin/jvm/functions/Function1;)V = OnMemberLeftHandler
  getOnMemberListChangedHandler()Lkotlin/jvm/functions/Function0; = OnMemberListChangedHandler
  setOnMemberListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnMemberListChangedHandler
  getOnMemberMetadataUpdatedHandler()Lkotlin/jvm/functions/Function2; = OnMemberMetadataUpdatedHandler
  setOnMemberMetadataUpdatedHandler(Lkotlin/jvm/functions/Function2;)V = OnMemberMetadataUpdatedHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnPublicationDisabledHandler()Lkotlin/jvm/functions/Function1; = OnPublicationDisabledHandler
  setOnPublicationDisabledHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationDisabledHandler
  getOnPublicationEnabledHandler()Lkotlin/jvm/functions/Function1; = OnPublicationEnabledHandler
  setOnPublicationEnabledHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationEnabledHandler
  getOnPublicationListChangedHandler()Lkotlin/jvm/functions/Function0; = OnPublicationListChangedHandler
  setOnPublicationListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnPublicationListChangedHandler
  getOnPublicationMetadataUpdatedHandler()Lkotlin/jvm/functions/Function2; = OnPublicationMetadataUpdatedHandler
  setOnPublicationMetadataUpdatedHandler(Lkotlin/jvm/functions/Function2;)V = OnPublicationMetadataUpdatedHandler
  getOnPublicationSubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationSubscribedHandler
  setOnPublicationSubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationSubscribedHandler
  getOnPublicationUnsubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationUnsubscribedHandler
  setOnPublicationUnsubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationUnsubscribedHandler
  getOnStreamPublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamPublishedHandler
  setOnStreamPublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamPublishedHandler
  getOnStreamUnpublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamUnpublishedHandler
  setOnStreamUnpublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamUnpublishedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getPublications()Ljava/util/Set; = Publications
  getState()Lcom/ntt/skyway/core/channel/Channel$State; = State
  getSubscriptions()Ljava/util/Set; = Subscriptions
  close(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Close(Kotlin.Coroutines.IContinuation)
  dispose()V = Dispose()
  getType()Lcom/ntt/skyway/room/Room$Type; = GetType()
  join(Lcom/ntt/skyway/room/member/RoomMember$Init;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Join(Com.Ntt.Skyway.Room.Member.RoomMember.Init, Kotlin.Coroutines.IContinuation)
  leave(Lcom/ntt/skyway/room/member/RoomMember;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Leave(Com.Ntt.Skyway.Room.Member.RoomMember, Kotlin.Coroutines.IContinuation)
  updateMetadata(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = UpdateMetadata(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/room/RoomPublication = Com.Ntt.Skyway.Room.RoomPublication
  getCodecCapabilities()Ljava/util/List; = CodecCapabilities
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  getEncodings()Ljava/util/List; = Encodings
  getId()Ljava/lang/String; = Id
  getMetadata()Ljava/lang/String; = Metadata
  getOnConnectionStateChangedHandler()Lkotlin/jvm/functions/Function1; = OnConnectionStateChangedHandler
  setOnConnectionStateChangedHandler(Lkotlin/jvm/functions/Function1;)V = OnConnectionStateChangedHandler
  getOnDisabledHandler()Lkotlin/jvm/functions/Function0; = OnDisabledHandler
  setOnDisabledHandler(Lkotlin/jvm/functions/Function0;)V = OnDisabledHandler
  getOnEnabledHandler()Lkotlin/jvm/functions/Function0; = OnEnabledHandler
  setOnEnabledHandler(Lkotlin/jvm/functions/Function0;)V = OnEnabledHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnSubscribedHandler()Lkotlin/jvm/functions/Function1; = OnSubscribedHandler
  setOnSubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnSubscribedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getOnUnpublishedHandler()Lkotlin/jvm/functions/Function0; = OnUnpublishedHandler
  setOnUnpublishedHandler(Lkotlin/jvm/functions/Function0;)V = OnUnpublishedHandler
  getOnUnsubscribedHandler()Lkotlin/jvm/functions/Function1; = OnUnsubscribedHandler
  setOnUnsubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnUnsubscribedHandler
  getPublisher()Lcom/ntt/skyway/room/member/RoomMember; = Publisher
  getRoom()Lcom/ntt/skyway/room/Room; = Room
  getState()Lcom/ntt/skyway/core/channel/Publication$State; = State
  getStream()Lcom/ntt/skyway/core/content/Stream; = Stream
  getSubscriptions()Ljava/util/List; = Subscriptions
  cancel(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Cancel(Kotlin.Coroutines.IContinuation)
  disable(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Disable(Kotlin.Coroutines.IContinuation)
  enable(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Enable(Kotlin.Coroutines.IContinuation)
  getStats(Ljava/lang/String;)Lcom/ntt/skyway/core/content/WebRTCStats; = GetStats(string)
  replaceStream(Lcom/ntt/skyway/core/content/local/LocalStream;)V = ReplaceStream(Com.Ntt.Skyway.Core.Content.Local.LocalStream)
  updateEncodings(Ljava/util/List;)V = UpdateEncodings(System.Collections.Generic.IList<Com.Ntt.Skyway.Core.Content.Encoding>)
com/ntt/skyway/room/RoomSubscription = Com.Ntt.Skyway.Room.RoomSubscription
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  getId()Ljava/lang/String; = Id
  getOnCanceledHandler()Lkotlin/jvm/functions/Function0; = OnCanceledHandler
  setOnCanceledHandler(Lkotlin/jvm/functions/Function0;)V = OnCanceledHandler
  getOnConnectionStateChangedHandler()Lkotlin/jvm/functions/Function1; = OnConnectionStateChangedHandler
  setOnConnectionStateChangedHandler(Lkotlin/jvm/functions/Function1;)V = OnConnectionStateChangedHandler
  getPreferredEncodingId()Ljava/lang/String; = PreferredEncodingId
  getPublication()Lcom/ntt/skyway/room/RoomPublication; = Publication
  getRoom()Lcom/ntt/skyway/room/Room; = Room
  getState()Lcom/ntt/skyway/core/channel/Subscription$State; = State
  getStats()Lcom/ntt/skyway/core/content/WebRTCStats; = Stats
  getStream()Lcom/ntt/skyway/core/content/remote/RemoteStream; = Stream
  getSubscriber()Lcom/ntt/skyway/room/member/RoomMember; = Subscriber
  cancel(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Cancel(Kotlin.Coroutines.IContinuation)
  changePreferredEncoding(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = ChangePreferredEncoding(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/room/sfu/LocalSFURoomMember = Com.Ntt.Skyway.Room.Sfu.LocalSFURoomMember
com/ntt/skyway/room/sfu/SFURoom = Com.Ntt.Skyway.Room.Sfu.SFURoom
  Companion = Companion
  create(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Create(string, string, Kotlin.Coroutines.IContinuation)
  find(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Find(string, string, Kotlin.Coroutines.IContinuation)
  findOrCreate(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = FindOrCreate(string, string, Kotlin.Coroutines.IContinuation)
  getType()Lcom/ntt/skyway/room/Room$Type; = GetType()
  join(Lcom/ntt/skyway/room/member/RoomMember$Init;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Join(Com.Ntt.Skyway.Room.Member.RoomMember.Init, Kotlin.Coroutines.IContinuation)
org/webrtc/AddIceObserver = Org.Webrtc.IAddIceObserver
  onAddFailure(Ljava/lang/String;)V = OnAddFailure(string)
  onAddSuccess()V = OnAddSuccess()
org/webrtc/audio/AudioDeviceModule = Org.Webrtc.Audio.IAudioDeviceModule
  getNativeAudioDeviceModulePointer()J = NativeAudioDeviceModulePointer
  release()V = Release()
  setMicrophoneMute(Z)V = SetMicrophoneMute(bool)
  setSpeakerMute(Z)V = SetSpeakerMute(bool)
org/webrtc/audio/JavaAudioDeviceModule = Org.Webrtc.Audio.JavaAudioDeviceModule
  audioInput = AudioInput
  audioOutput = AudioOutput
  isBuiltInAcousticEchoCancelerSupported()Z = IsBuiltInAcousticEchoCancelerSupported
  isBuiltInNoiseSuppressorSupported()Z = IsBuiltInNoiseSuppressorSupported
  getNativeAudioDeviceModulePointer()J = NativeAudioDeviceModulePointer
  builder(Landroid/content/Context;)Lorg/webrtc/audio/JavaAudioDeviceModule$Builder; = InvokeBuilder(Android.Content.Context)
  release()V = Release()
  setMicrophoneMute(Z)V = SetMicrophoneMute(bool)
  setPreferredInputDevice(Landroid/media/AudioDeviceInfo;)V = SetPreferredInputDevice(Android.Media.AudioDeviceInfo)
  setSpeakerMute(Z)V = SetSpeakerMute(bool)
org/webrtc/audio/WebRtcAudioRecord = Org.Webrtc.Audio.WebRtcAudioRecord
  <init>(Landroid/content/Context;Ljava/util/concurrent/ScheduledExecutorService;Landroid/media/AudioManager;IILorg/webrtc/audio/JavaAudioDeviceModule$AudioRecordErrorCallback;Lorg/webrtc/audio/JavaAudioDeviceModule$AudioRecordStateCallback;Lorg/webrtc/audio/JavaAudioDeviceModule$SamplesReadyCallback;ZZ)V = .ctor(Android.Content.Context, Java.Util.Concurrent.IScheduledExecutorService, Android.Media.AudioManager, int, int, Org.Webrtc.Audio.JavaAudioDeviceModule.IAudioRecordErrorCallback, Org.Webrtc.Audio.JavaAudioDeviceModule.IAudioRecordStateCallback, Org.Webrtc.Audio.JavaAudioDeviceModule.ISamplesReadyCallback, bool, bool)
  audioRecord = AudioRecord
  DEFAULT_AUDIO_FORMAT = DefaultAudioFormat
  DEFAULT_AUDIO_SOURCE = DefaultAudioSource
  onAudioBufferListener = OnAudioBufferListener
  initRecording(II)I = InitRecording(int, int)
  setMicrophoneMute(Z)V = SetMicrophoneMute(bool)
  setNativeAudioRecord(J)V = SetNativeAudioRecord(long)
  startRecording()Z = StartRecording()
  stopRecording()Z = StopRecording()
org/webrtc/audio/WebRtcAudioTrack = Org.Webrtc.Audio.WebRtcAudioTrack
  audioTrack = AudioTrack
  onAudioBufferListener = OnAudioBufferListener
  initPlayout(IID)I = InitPlayout(int, int, double)
  setNativeAudioTrack(J)V = SetNativeAudioTrack(long)
  setSpeakerMute(Z)V = SetSpeakerMute(bool)
  startPlayout()Z = StartPlayout()
  stopPlayout()Z = StopPlayout()
org/webrtc/AudioDecoderFactoryFactory = Org.Webrtc.IAudioDecoderFactoryFactory
  createNativeAudioDecoderFactory()J = CreateNativeAudioDecoderFactory()
org/webrtc/AudioEncoderFactoryFactory = Org.Webrtc.IAudioEncoderFactoryFactory
  createNativeAudioEncoderFactory()J = CreateNativeAudioEncoderFactory()
org/webrtc/AudioProcessingFactory = Org.Webrtc.IAudioProcessingFactory
  createNative()J = CreateNative()
org/webrtc/AudioSource = Org.Webrtc.AudioSource
  <init>(J)V = .ctor(long)
org/webrtc/AudioTrack = Org.Webrtc.AudioTrack
  <init>(J)V = .ctor(long)
  setVolume(D)V = SetVolume(double)
org/webrtc/BuiltinAudioDecoderFactoryFactory = Org.Webrtc.BuiltinAudioDecoderFactoryFactory
  <init>()V = .ctor()
  createNativeAudioDecoderFactory()J = CreateNativeAudioDecoderFactory()
org/webrtc/BuiltinAudioEncoderFactoryFactory = Org.Webrtc.BuiltinAudioEncoderFactoryFactory
  <init>()V = .ctor()
  createNativeAudioEncoderFactory()J = CreateNativeAudioEncoderFactory()
org/webrtc/CalledByNative = Org.Webrtc.ICalledByNative
  value()Ljava/lang/String; = Value()
org/webrtc/CalledByNativeUnchecked = Org.Webrtc.ICalledByNativeUnchecked
  value()Ljava/lang/String; = Value()
org/webrtc/CallSessionFileRotatingLogSink = Org.Webrtc.CallSessionFileRotatingLogSink
  <init>(Ljava/lang/String;ILorg/webrtc/Logging$Severity;)V = .ctor(string, int, Org.Webrtc.Logging.Severity)
  dispose()V = Dispose()
  getLogData(Ljava/lang/String;)[B = GetLogData(string)
org/webrtc/Camera1Capturer = Org.Webrtc.Camera1Capturer
  <init>(Ljava/lang/String;Lorg/webrtc/CameraVideoCapturer$CameraEventsHandler;Z)V = .ctor(string, Org.Webrtc.ICameraVideoCapturer.ICameraEventsHandler, bool)
  getCameraName()Ljava/lang/String; = CameraName
  isScreencast()Z = IsScreencast
  changeCaptureFormat(III)V = ChangeCaptureFormat(int, int, int)
  dispose()V = Dispose()
  initialize(Lorg/webrtc/SurfaceTextureHelper;Landroid/content/Context;Lorg/webrtc/CapturerObserver;)V = Initialize(Org.Webrtc.SurfaceTextureHelper, Android.Content.Context, Org.Webrtc.ICapturerObserver)
  printStackTrace()V = PrintStackTrace()
  startCapture(III)V = StartCapture(int, int, int)
  stopCapture()V = StopCapture()
  switchCamera(Lorg/webrtc/CameraVideoCapturer$CameraSwitchHandler;)V = SwitchCamera(Org.Webrtc.ICameraVideoCapturer.ICameraSwitchHandler)
  switchCamera(Lorg/webrtc/CameraVideoCapturer$CameraSwitchHandler;Ljava/lang/String;)V = SwitchCamera(Org.Webrtc.ICameraVideoCapturer.ICameraSwitchHandler, string)
org/webrtc/Camera1Enumerator = Org.Webrtc.Camera1Enumerator
  <init>()V = .ctor()
  <init>(Z)V = .ctor(bool)
  createCapturer(Ljava/lang/String;Lorg/webrtc/CameraVideoCapturer$CameraEventsHandler;)Lorg/webrtc/CameraVideoCapturer; = CreateCapturer(string, Org.Webrtc.ICameraVideoCapturer.ICameraEventsHandler)
  getDeviceNames()[Ljava/lang/String; = GetDeviceNames()
  getSupportedFormats(Ljava/lang/String;)Ljava/util/List; = GetSupportedFormats(string)
  isBackFacing(Ljava/lang/String;)Z = IsBackFacing(string)
  isFrontFacing(Ljava/lang/String;)Z = IsFrontFacing(string)
org/webrtc/Camera2Capturer = Org.Webrtc.Camera2Capturer
  <init>(Landroid/content/Context;Ljava/lang/String;Lorg/webrtc/CameraVideoCapturer$CameraEventsHandler;)V = .ctor(Android.Content.Context, string, Org.Webrtc.ICameraVideoCapturer.ICameraEventsHandler)
  getCameraName()Ljava/lang/String; = CameraName
  isScreencast()Z = IsScreencast
  changeCaptureFormat(III)V = ChangeCaptureFormat(int, int, int)
  dispose()V = Dispose()
  initialize(Lorg/webrtc/SurfaceTextureHelper;Landroid/content/Context;Lorg/webrtc/CapturerObserver;)V = Initialize(Org.Webrtc.SurfaceTextureHelper, Android.Content.Context, Org.Webrtc.ICapturerObserver)
  printStackTrace()V = PrintStackTrace()
  startCapture(III)V = StartCapture(int, int, int)
  stopCapture()V = StopCapture()
  switchCamera(Lorg/webrtc/CameraVideoCapturer$CameraSwitchHandler;)V = SwitchCamera(Org.Webrtc.ICameraVideoCapturer.ICameraSwitchHandler)
  switchCamera(Lorg/webrtc/CameraVideoCapturer$CameraSwitchHandler;Ljava/lang/String;)V = SwitchCamera(Org.Webrtc.ICameraVideoCapturer.ICameraSwitchHandler, string)
org/webrtc/Camera2Enumerator = Org.Webrtc.Camera2Enumerator
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  createCapturer(Ljava/lang/String;Lorg/webrtc/CameraVideoCapturer$CameraEventsHandler;)Lorg/webrtc/CameraVideoCapturer; = CreateCapturer(string, Org.Webrtc.ICameraVideoCapturer.ICameraEventsHandler)
  getDeviceNames()[Ljava/lang/String; = GetDeviceNames()
  getSupportedFormats(Ljava/lang/String;)Ljava/util/List; = GetSupportedFormats(string)
  isBackFacing(Ljava/lang/String;)Z = IsBackFacing(string)
  isFrontFacing(Ljava/lang/String;)Z = IsFrontFacing(string)
  isSupported(Landroid/content/Context;)Z = IsSupported(Android.Content.Context)
org/webrtc/CameraEnumerationAndroid = Org.Webrtc.CameraEnumerationAndroid
  <init>()V = .ctor()
  getClosestSupportedFramerateRange(Ljava/util/List;I)Lorg/webrtc/CameraEnumerationAndroid$CaptureFormat$FramerateRange; = GetClosestSupportedFramerateRange(System.Collections.Generic.IList<Org.Webrtc.CameraEnumerationAndroid.CaptureFormat.FramerateRange>, int)
  getClosestSupportedSize(Ljava/util/List;II)Lorg/webrtc/Size; = GetClosestSupportedSize(System.Collections.Generic.IList<Org.Webrtc.Size>, int, int)
org/webrtc/CameraEnumerator = Org.Webrtc.ICameraEnumerator
  createCapturer(Ljava/lang/String;Lorg/webrtc/CameraVideoCapturer$CameraEventsHandler;)Lorg/webrtc/CameraVideoCapturer; = CreateCapturer(string, Org.Webrtc.ICameraVideoCapturer.ICameraEventsHandler)
  getDeviceNames()[Ljava/lang/String; = GetDeviceNames()
  getSupportedFormats(Ljava/lang/String;)Ljava/util/List; = GetSupportedFormats(string)
  isBackFacing(Ljava/lang/String;)Z = IsBackFacing(string)
  isFrontFacing(Ljava/lang/String;)Z = IsFrontFacing(string)
org/webrtc/CameraVideoCapturer = Org.Webrtc.ICameraVideoCapturer
  addMediaRecorderToCamera(Landroid/media/MediaRecorder;Lorg/webrtc/CameraVideoCapturer$MediaRecorderHandler;)V = AddMediaRecorderToCamera(Android.Media.MediaRecorder, Org.Webrtc.ICameraVideoCapturer.IMediaRecorderHandler)
  removeMediaRecorderFromCamera(Lorg/webrtc/CameraVideoCapturer$MediaRecorderHandler;)V = RemoveMediaRecorderFromCamera(Org.Webrtc.ICameraVideoCapturer.IMediaRecorderHandler)
  switchCamera(Lorg/webrtc/CameraVideoCapturer$CameraSwitchHandler;)V = SwitchCamera(Org.Webrtc.ICameraVideoCapturer.ICameraSwitchHandler)
  switchCamera(Lorg/webrtc/CameraVideoCapturer$CameraSwitchHandler;Ljava/lang/String;)V = SwitchCamera(Org.Webrtc.ICameraVideoCapturer.ICameraSwitchHandler, string)
org/webrtc/CandidatePairChangeEvent = Org.Webrtc.CandidatePairChangeEvent
  estimatedDisconnectedTimeMs = EstimatedDisconnectedTimeMs
  lastDataReceivedMs = LastDataReceivedMs
  local = Local
  reason = Reason
  remote = Remote
org/webrtc/CapturerObserver = Org.Webrtc.ICapturerObserver
  onCapturerStarted(Z)V = OnCapturerStarted(bool)
  onCapturerStopped()V = OnCapturerStopped()
  onFrameCaptured(Lorg/webrtc/VideoFrame;)V = OnFrameCaptured(Org.Webrtc.VideoFrame)
org/webrtc/ContextUtils = Org.Webrtc.ContextUtils
  <init>()V = .ctor()
  getApplicationContext()Landroid/content/Context; = ApplicationContext
  initialize(Landroid/content/Context;)V = Initialize(Android.Content.Context)
org/webrtc/CryptoOptions = Org.Webrtc.CryptoOptions
  getSFrame()Lorg/webrtc/CryptoOptions$SFrame; = GetSFrame()
  getSrtp()Lorg/webrtc/CryptoOptions$Srtp; = GetSrtp()
  builder()Lorg/webrtc/CryptoOptions$Builder; = InvokeBuilder()
org/webrtc/DataChannel = Org.Webrtc.DataChannel
  <init>(J)V = .ctor(long)
  bufferedAmount()J = BufferedAmount()
  close()V = Close()
  dispose()V = Dispose()
  id()I = Id()
  state()Lorg/webrtc/DataChannel$State; = InvokeState()
  label()Ljava/lang/String; = Label()
  registerObserver(Lorg/webrtc/DataChannel$Observer;)V = RegisterObserver(Org.Webrtc.DataChannel.IObserver)
  send(Lorg/webrtc/DataChannel$Buffer;)Z = Send(Org.Webrtc.DataChannel.Buffer)
  unregisterObserver()V = UnregisterObserver()
org/webrtc/DefaultVideoDecoderFactory = Org.Webrtc.DefaultVideoDecoderFactory
  <init>(Lorg/webrtc/EglBase$Context;)V = .ctor(Org.Webrtc.IEglBase.IContext)
  createDecoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoDecoder; = CreateDecoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/DefaultVideoEncoderFactory = Org.Webrtc.DefaultVideoEncoderFactory
  <init>(Lorg/webrtc/EglBase$Context;ZZ)V = .ctor(Org.Webrtc.IEglBase.IContext, bool, bool)
  createEncoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoEncoder; = CreateEncoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/DtmfSender = Org.Webrtc.DtmfSender
  <init>(J)V = .ctor(long)
  canInsertDtmf()Z = CanInsertDtmf()
  dispose()V = Dispose()
  duration()I = Duration()
  insertDtmf(Ljava/lang/String;II)Z = InsertDtmf(string, int, int)
  interToneGap()I = InterToneGap()
  tones()Ljava/lang/String; = Tones()
org/webrtc/EglBase = Org.Webrtc.IEglBase
  CONFIG_PIXEL_BUFFER = ConfigPixelBuffer
  CONFIG_PIXEL_RGBA_BUFFER = ConfigPixelRgbaBuffer
  CONFIG_PLAIN = ConfigPlain
  CONFIG_RECORDABLE = ConfigRecordable
  CONFIG_RGBA = ConfigRgba
  EGL_OPENGL_ES2_BIT = EglOpenglEs2Bit
  EGL_OPENGL_ES3_BIT = EglOpenglEs3Bit
  EGL_RECORDABLE_ANDROID = EglRecordableAndroid
  lock = Lock
  getEglBaseContext()Lorg/webrtc/EglBase$Context; = EglBaseContext
  hasSurface()Z = HasSurface
  create()Lorg/webrtc/EglBase; = Create()
  create(Lorg/webrtc/EglBase$Context;)Lorg/webrtc/EglBase; = Create(Org.Webrtc.IEglBase.IContext)
  create(Lorg/webrtc/EglBase$Context;[I)Lorg/webrtc/EglBase; = Create(Org.Webrtc.IEglBase.IContext, int[])
  createDummyPbufferSurface()V = CreateDummyPbufferSurface()
  createEgl10([I)Lorg/webrtc/EglBase10; = CreateEgl10(int[])
  createEgl10(Ljavax/microedition/khronos/egl/EGLContext;[I)Lorg/webrtc/EglBase10; = CreateEgl10(Javax.Microedition.Khronos.Egl.EGLContext, int[])
  createEgl10(Lorg/webrtc/EglBase10$Context;[I)Lorg/webrtc/EglBase10; = CreateEgl10(Org.Webrtc.IEglBase10.IContext, int[])
  createEgl14(Landroid/opengl/EGLContext;[I)Lorg/webrtc/EglBase14; = CreateEgl14(Android.Opengl.EGLContext, int[])
  createEgl14([I)Lorg/webrtc/EglBase14; = CreateEgl14(int[])
  createEgl14(Lorg/webrtc/EglBase14$Context;[I)Lorg/webrtc/EglBase14; = CreateEgl14(Org.Webrtc.IEglBase14.IContext, int[])
  createPbufferSurface(II)V = CreatePbufferSurface(int, int)
  createSurface(Landroid/graphics/SurfaceTexture;)V = CreateSurface(Android.Graphics.SurfaceTexture)
  createSurface(Landroid/view/Surface;)V = CreateSurface(Android.Views.Surface)
  detachCurrent()V = DetachCurrent()
  getOpenGlesVersionFromConfig([I)I = GetOpenGlesVersionFromConfig(int[])
  configBuilder()Lorg/webrtc/EglBase$ConfigBuilder; = InvokeConfigBuilder()
  makeCurrent()V = MakeCurrent()
  release()V = Release()
  releaseSurface()V = ReleaseSurface()
  surfaceHeight()I = SurfaceHeight()
  surfaceWidth()I = SurfaceWidth()
  swapBuffers()V = SwapBuffers()
  swapBuffers(J)V = SwapBuffers(long)
org/webrtc/EglBase10 = Org.Webrtc.IEglBase10
org/webrtc/EglBase14 = Org.Webrtc.IEglBase14
org/webrtc/EglRenderer = Org.Webrtc.EglRenderer
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Lorg/webrtc/VideoFrameDrawer;)V = .ctor(string, Org.Webrtc.VideoFrameDrawer)
  name = Name
  addFrameListener(Lorg/webrtc/EglRenderer$FrameListener;F)V = AddFrameListener(Org.Webrtc.EglRenderer.IFrameListener, float)
  addFrameListener(Lorg/webrtc/EglRenderer$FrameListener;FLorg/webrtc/RendererCommon$GlDrawer;)V = AddFrameListener(Org.Webrtc.EglRenderer.IFrameListener, float, Org.Webrtc.RendererCommon.IGlDrawer)
  addFrameListener(Lorg/webrtc/EglRenderer$FrameListener;FLorg/webrtc/RendererCommon$GlDrawer;Z)V = AddFrameListener(Org.Webrtc.EglRenderer.IFrameListener, float, Org.Webrtc.RendererCommon.IGlDrawer, bool)
  clearImage()V = ClearImage()
  clearImage(FFFF)V = ClearImage(float, float, float, float)
  createEglSurface(Landroid/graphics/SurfaceTexture;)V = CreateEglSurface(Android.Graphics.SurfaceTexture)
  createEglSurface(Landroid/view/Surface;)V = CreateEglSurface(Android.Views.Surface)
  disableFpsReduction()V = DisableFpsReduction()
  init(Lorg/webrtc/EglBase$Context;[ILorg/webrtc/RendererCommon$GlDrawer;)V = Init(Org.Webrtc.IEglBase.IContext, int[], Org.Webrtc.RendererCommon.IGlDrawer)
  init(Lorg/webrtc/EglBase$Context;[ILorg/webrtc/RendererCommon$GlDrawer;Z)V = Init(Org.Webrtc.IEglBase.IContext, int[], Org.Webrtc.RendererCommon.IGlDrawer, bool)
  onFrame(Lorg/webrtc/VideoFrame;)V = OnFrame(Org.Webrtc.VideoFrame)
  pauseVideo()V = PauseVideo()
  printStackTrace()V = PrintStackTrace()
  release()V = Release()
  releaseEglSurface(Ljava/lang/Runnable;)V = ReleaseEglSurface(Java.Lang.IRunnable)
  removeFrameListener(Lorg/webrtc/EglRenderer$FrameListener;)V = RemoveFrameListener(Org.Webrtc.EglRenderer.IFrameListener)
  setErrorCallback(Lorg/webrtc/EglRenderer$ErrorCallback;)V = SetErrorCallback(Org.Webrtc.EglRenderer.IErrorCallback)
  setFpsReduction(F)V = SetFpsReduction(float)
  setLayoutAspectRatio(F)V = SetLayoutAspectRatio(float)
  setMirror(Z)V = SetMirror(bool)
  setMirrorVertically(Z)V = SetMirrorVertically(bool)
org/webrtc/EncodedImage = Org.Webrtc.EncodedImage
  buffer = Buffer
  captureTimeMs = CaptureTimeMs
  captureTimeNs = CaptureTimeNs
  encodedHeight = EncodedHeight
  encodedWidth = EncodedWidth
  frameType = FrameType
  qp = Qp
  rotation = Rotation
  builder()Lorg/webrtc/EncodedImage$Builder; = InvokeBuilder()
  release()V = Release()
  retain()V = Retain()
org/webrtc/FecControllerFactoryFactoryInterface = Org.Webrtc.IFecControllerFactoryFactoryInterface
  createNative()J = CreateNative()
org/webrtc/FileVideoCapturer = Org.Webrtc.FileVideoCapturer
  <init>(Ljava/lang/String;)V = .ctor(string)
  isScreencast()Z = IsScreencast
  changeCaptureFormat(III)V = ChangeCaptureFormat(int, int, int)
  dispose()V = Dispose()
  initialize(Lorg/webrtc/SurfaceTextureHelper;Landroid/content/Context;Lorg/webrtc/CapturerObserver;)V = Initialize(Org.Webrtc.SurfaceTextureHelper, Android.Content.Context, Org.Webrtc.ICapturerObserver)
  startCapture(III)V = StartCapture(int, int, int)
  stopCapture()V = StopCapture()
  tick()V = Tick()
org/webrtc/FrameDecryptor = Org.Webrtc.IFrameDecryptor
  getNativeFrameDecryptor()J = NativeFrameDecryptor
org/webrtc/FrameEncryptor = Org.Webrtc.IFrameEncryptor
  getNativeFrameEncryptor()J = NativeFrameEncryptor
org/webrtc/GlRectDrawer = Org.Webrtc.GlRectDrawer
  <init>()V = .ctor()
  drawOes(I[FIIIIII)V = DrawOes(int, float[], int, int, int, int, int, int)
  drawRgb(I[FIIIIII)V = DrawRgb(int, float[], int, int, int, int, int, int)
  drawYuv([I[FIIIIII)V = DrawYuv(int[], float[], int, int, int, int, int, int)
  release()V = Release()
org/webrtc/GlShader = Org.Webrtc.GlShader
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getAttribLocation(Ljava/lang/String;)I = GetAttribLocation(string)
  getUniformLocation(Ljava/lang/String;)I = GetUniformLocation(string)
  release()V = Release()
  setVertexAttribArray(Ljava/lang/String;IILjava/nio/FloatBuffer;)V = SetVertexAttribArray(string, int, int, Java.Nio.FloatBuffer)
  setVertexAttribArray(Ljava/lang/String;ILjava/nio/FloatBuffer;)V = SetVertexAttribArray(string, int, Java.Nio.FloatBuffer)
  useProgram()V = UseProgram()
org/webrtc/GlTextureFrameBuffer = Org.Webrtc.GlTextureFrameBuffer
  <init>(I)V = .ctor(int)
  getFrameBufferId()I = FrameBufferId
  getHeight()I = Height
  getTextureId()I = TextureId
  getWidth()I = Width
  release()V = Release()
  setSize(II)V = SetSize(int, int)
org/webrtc/GlUtil = Org.Webrtc.GlUtil
  checkNoGLES2Error(Ljava/lang/String;)V = CheckNoGLES2Error(string)
  createFloatBuffer([F)Ljava/nio/FloatBuffer; = CreateFloatBuffer(float[])
  generateTexture(I)I = GenerateTexture(int)
org/webrtc/HardwareVideoDecoderFactory = Org.Webrtc.HardwareVideoDecoderFactory
  <init>()V = .ctor()
  <init>(Lorg/webrtc/EglBase$Context;)V = .ctor(Org.Webrtc.IEglBase.IContext)
  <init>(Lorg/webrtc/EglBase$Context;Lorg/webrtc/Predicate;)V = .ctor(Org.Webrtc.IEglBase.IContext, Org.Webrtc.IPredicate)
  createDecoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoDecoder; = CreateDecoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/HardwareVideoEncoderFactory = Org.Webrtc.HardwareVideoEncoderFactory
  <init>(Lorg/webrtc/EglBase$Context;ZZ)V = .ctor(Org.Webrtc.IEglBase.IContext, bool, bool)
  <init>(Lorg/webrtc/EglBase$Context;ZZLorg/webrtc/Predicate;)V = .ctor(Org.Webrtc.IEglBase.IContext, bool, bool, Org.Webrtc.IPredicate)
  <init>(ZZ)V = .ctor(bool, bool)
  createEncoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoEncoder; = CreateEncoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/IceCandidate = Org.Webrtc.IceCandidate
  <init>(Ljava/lang/String;ILjava/lang/String;)V = .ctor(string, int, string)
  adapterType = AdapterType
  sdp = Sdp
  sdpMid = SdpMid
  sdpMLineIndex = SdpMLineIndex
  serverUrl = ServerUrl
org/webrtc/IceCandidateErrorEvent = Org.Webrtc.IceCandidateErrorEvent
  <init>(Ljava/lang/String;ILjava/lang/String;ILjava/lang/String;)V = .ctor(string, int, string, int, string)
  address = Address
  errorCode = ErrorCode
  errorText = ErrorText
  port = Port
  url = Url
org/webrtc/JavaI420Buffer = Org.Webrtc.JavaI420Buffer
  getDataU()Ljava/nio/ByteBuffer; = DataU
  getDataV()Ljava/nio/ByteBuffer; = DataV
  getDataY()Ljava/nio/ByteBuffer; = DataY
  getHeight()I = Height
  getStrideU()I = StrideU
  getStrideV()I = StrideV
  getStrideY()I = StrideY
  getWidth()I = Width
  allocate(II)Lorg/webrtc/JavaI420Buffer; = Allocate(int, int)
  cropAndScale(IIIIII)Lorg/webrtc/VideoFrame$Buffer; = CropAndScale(int, int, int, int, int, int)
  cropAndScaleI420(Lorg/webrtc/VideoFrame$I420Buffer;IIIIII)Lorg/webrtc/VideoFrame$Buffer; = CropAndScaleI420(Org.Webrtc.VideoFrame.II420Buffer, int, int, int, int, int, int)
  release()V = Release()
  retain()V = Retain()
  toI420()Lorg/webrtc/VideoFrame$I420Buffer; = ToI420()
  wrap(IILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/lang/Runnable;)Lorg/webrtc/JavaI420Buffer; = Wrap(int, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Lang.IRunnable)
org/webrtc/JniCommon = Org.Webrtc.JniCommon
  <init>()V = .ctor()
  nativeAddRef(J)V = NativeAddRef(long)
  nativeAllocateByteBuffer(I)Ljava/nio/ByteBuffer; = NativeAllocateByteBuffer(int)
  nativeFreeByteBuffer(Ljava/nio/ByteBuffer;)V = NativeFreeByteBuffer(Java.Nio.ByteBuffer)
  nativeReleaseRef(J)V = NativeReleaseRef(long)
org/webrtc/LibaomAv1Decoder = Org.Webrtc.LibaomAv1Decoder
  <init>()V = .ctor()
  createNativeVideoDecoder()J = CreateNativeVideoDecoder()
org/webrtc/LibaomAv1Encoder = Org.Webrtc.LibaomAv1Encoder
  <init>()V = .ctor()
  isHardwareEncoder()Z = IsHardwareEncoder
  createNativeVideoEncoder()J = CreateNativeVideoEncoder()
org/webrtc/LibvpxVp8Decoder = Org.Webrtc.LibvpxVp8Decoder
  <init>()V = .ctor()
  createNativeVideoDecoder()J = CreateNativeVideoDecoder()
org/webrtc/LibvpxVp8Encoder = Org.Webrtc.LibvpxVp8Encoder
  <init>()V = .ctor()
  isHardwareEncoder()Z = IsHardwareEncoder
  createNativeVideoEncoder()J = CreateNativeVideoEncoder()
org/webrtc/LibvpxVp9Decoder = Org.Webrtc.LibvpxVp9Decoder
  <init>()V = .ctor()
  createNativeVideoDecoder()J = CreateNativeVideoDecoder()
org/webrtc/LibvpxVp9Encoder = Org.Webrtc.LibvpxVp9Encoder
  <init>()V = .ctor()
  isHardwareEncoder()Z = IsHardwareEncoder
  createNativeVideoEncoder()J = CreateNativeVideoEncoder()
org/webrtc/Loggable = Org.Webrtc.ILoggable
  onLogMessage(Ljava/lang/String;Lorg/webrtc/Logging$Severity;Ljava/lang/String;)V = OnLogMessage(string, Org.Webrtc.Logging.Severity, string)
org/webrtc/Logging = Org.Webrtc.Logging
  <init>()V = .ctor()
  d(Ljava/lang/String;Ljava/lang/String;)V = D(string, string)
  e(Ljava/lang/String;Ljava/lang/String;)V = E(string, string)
  e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = E(string, string, Java.Lang.Throwable)
  enableLogThreads()V = EnableLogThreads()
  enableLogTimeStamps()V = EnableLogTimeStamps()
  enableLogToDebugOutput(Lorg/webrtc/Logging$Severity;)V = EnableLogToDebugOutput(Org.Webrtc.Logging.Severity)
  enableTracing(Ljava/lang/String;Ljava/util/EnumSet;)V = EnableTracing(string, Java.Util.EnumSet)
  log(Lorg/webrtc/Logging$Severity;Ljava/lang/String;Ljava/lang/String;)V = Log(Org.Webrtc.Logging.Severity, string, string)
  v(Ljava/lang/String;Ljava/lang/String;)V = V(string, string)
  w(Ljava/lang/String;Ljava/lang/String;)V = W(string, string)
  w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = W(string, string, Java.Lang.Throwable)
org/webrtc/MediaConstraints = Org.Webrtc.MediaConstraints
  <init>()V = .ctor()
  mandatory = Mandatory
  optional = Optional
org/webrtc/MediaSource = Org.Webrtc.MediaSource
  <init>(J)V = .ctor(long)
  getNativeMediaSource()J = NativeMediaSource
  dispose()V = Dispose()
  state()Lorg/webrtc/MediaSource$State; = InvokeState()
org/webrtc/MediaStream = Org.Webrtc.MediaStream
  <init>(J)V = .ctor(long)
  audioTracks = AudioTracks
  preservedVideoTracks = PreservedVideoTracks
  videoTracks = VideoTracks
  getId()Ljava/lang/String; = Id
  addPreservedTrack(Lorg/webrtc/VideoTrack;)Z = AddPreservedTrack(Org.Webrtc.VideoTrack)
  addTrack(Lorg/webrtc/AudioTrack;)Z = AddTrack(Org.Webrtc.AudioTrack)
  addTrack(Lorg/webrtc/VideoTrack;)Z = AddTrack(Org.Webrtc.VideoTrack)
  dispose()V = Dispose()
  removeTrack(Lorg/webrtc/AudioTrack;)Z = RemoveTrack(Org.Webrtc.AudioTrack)
  removeTrack(Lorg/webrtc/VideoTrack;)Z = RemoveTrack(Org.Webrtc.VideoTrack)
org/webrtc/MediaStreamTrack = Org.Webrtc.MediaStreamTrack
  <init>(J)V = .ctor(long)
  AUDIO_TRACK_KIND = AudioTrackKind
  VIDEO_TRACK_KIND = VideoTrackKind
  dispose()V = Dispose()
  enabled()Z = Enabled()
  id()Ljava/lang/String; = Id()
  state()Lorg/webrtc/MediaStreamTrack$State; = InvokeState()
  kind()Ljava/lang/String; = Kind()
  setEnabled(Z)Z = SetEnabled(bool)
org/webrtc/Metrics = Org.Webrtc.Metrics
  map = Map
  getAndReset()Lorg/webrtc/Metrics; = AndReset
  enable()V = Enable()
org/webrtc/NativeLibraryLoader = Org.Webrtc.INativeLibraryLoader
  load(Ljava/lang/String;)Z = Load(string)
org/webrtc/NativePeerConnectionFactory = Org.Webrtc.INativePeerConnectionFactory
  createNativePeerConnection()J = CreateNativePeerConnection()
org/webrtc/NetEqFactoryFactory = Org.Webrtc.INetEqFactoryFactory
  createNativeNetEqFactory()J = CreateNativeNetEqFactory()
org/webrtc/NetworkChangeDetector = Org.Webrtc.INetworkChangeDetector
  getActiveNetworkList()Ljava/util/List; = ActiveNetworkList
  getCurrentConnectionType()Lorg/webrtc/NetworkChangeDetector$ConnectionType; = CurrentConnectionType
  destroy()V = Destroy()
  supportNetworkCallback()Z = SupportNetworkCallback()
org/webrtc/NetworkChangeDetectorFactory = Org.Webrtc.INetworkChangeDetectorFactory
  create(Lorg/webrtc/NetworkChangeDetector$Observer;Landroid/content/Context;)Lorg/webrtc/NetworkChangeDetector; = Create(Org.Webrtc.INetworkChangeDetector.Observer, Android.Content.Context)
org/webrtc/NetworkControllerFactoryFactory = Org.Webrtc.INetworkControllerFactoryFactory
  createNativeNetworkControllerFactory()J = CreateNativeNetworkControllerFactory()
org/webrtc/NetworkMonitor = Org.Webrtc.NetworkMonitor
  getInstance()Lorg/webrtc/NetworkMonitor; = Instance
  isOnline()Z = IsOnline
  addNetworkObserver(Lorg/webrtc/NetworkMonitor$NetworkObserver;)V = AddNetworkObserver(Org.Webrtc.NetworkMonitor.INetworkObserver)
  addObserver(Lorg/webrtc/NetworkMonitor$NetworkObserver;)V = AddObserver(Org.Webrtc.NetworkMonitor.INetworkObserver)
  init(Landroid/content/Context;)V = Init(Android.Content.Context)
  removeNetworkObserver(Lorg/webrtc/NetworkMonitor$NetworkObserver;)V = RemoveNetworkObserver(Org.Webrtc.NetworkMonitor.INetworkObserver)
  removeObserver(Lorg/webrtc/NetworkMonitor$NetworkObserver;)V = RemoveObserver(Org.Webrtc.NetworkMonitor.INetworkObserver)
  setNetworkChangeDetectorFactory(Lorg/webrtc/NetworkChangeDetectorFactory;)V = SetNetworkChangeDetectorFactory(Org.Webrtc.INetworkChangeDetectorFactory)
  startMonitoring()V = StartMonitoring()
  startMonitoring(Landroid/content/Context;)V = StartMonitoring(Android.Content.Context)
  startMonitoring(Landroid/content/Context;Ljava/lang/String;)V = StartMonitoring(Android.Content.Context, string)
  stopMonitoring()V = StopMonitoring()
org/webrtc/NetworkMonitorAutoDetect = Org.Webrtc.NetworkMonitorAutoDetect
  <init>(Lorg/webrtc/NetworkChangeDetector$Observer;Landroid/content/Context;)V = .ctor(Org.Webrtc.INetworkChangeDetector.Observer, Android.Content.Context)
  getActiveNetworkList()Ljava/util/List; = ActiveNetworkList
  getCurrentConnectionType()Lorg/webrtc/NetworkChangeDetector$ConnectionType; = CurrentConnectionType
  getCurrentNetworkState()Ljava/lang/Object; = CurrentNetworkState
  getDefaultNetId()J = DefaultNetId
  destroy()V = Destroy()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
  setIncludeWifiDirect(Z)V = SetIncludeWifiDirect(bool)
  supportNetworkCallback()Z = SupportNetworkCallback()
org/webrtc/NetworkPreference = Org.Webrtc.INetworkPreference
  NEUTRAL = Neutral
  NOT_PREFERRED = NotPreferred
org/webrtc/NetworkStatePredictorFactoryFactory = Org.Webrtc.INetworkStatePredictorFactoryFactory
  createNativeNetworkStatePredictorFactory()J = CreateNativeNetworkStatePredictorFactory()
org/webrtc/NV12Buffer = Org.Webrtc.NV12Buffer
  <init>(IIIILjava/nio/ByteBuffer;Ljava/lang/Runnable;)V = .ctor(int, int, int, int, Java.Nio.ByteBuffer, Java.Lang.IRunnable)
  getHeight()I = Height
  getWidth()I = Width
  cropAndScale(IIIIII)Lorg/webrtc/VideoFrame$Buffer; = CropAndScale(int, int, int, int, int, int)
  release()V = Release()
  retain()V = Retain()
  toI420()Lorg/webrtc/VideoFrame$I420Buffer; = ToI420()
org/webrtc/NV21Buffer = Org.Webrtc.NV21Buffer
  <init>([BIILjava/lang/Runnable;)V = .ctor(byte[], int, int, Java.Lang.IRunnable)
  getHeight()I = Height
  getWidth()I = Width
  cropAndScale(IIIIII)Lorg/webrtc/VideoFrame$Buffer; = CropAndScale(int, int, int, int, int, int)
  release()V = Release()
  retain()V = Retain()
  toI420()Lorg/webrtc/VideoFrame$I420Buffer; = ToI420()
org/webrtc/PeerConnection = Org.Webrtc.PeerConnection
  <init>(Lorg/webrtc/NativePeerConnectionFactory;)V = .ctor(Org.Webrtc.INativePeerConnectionFactory)
  getCertificate()Lorg/webrtc/RtcCertificatePem; = Certificate
  getLocalDescription()Lorg/webrtc/SessionDescription; = LocalDescription
  getNativePeerConnection()J = NativePeerConnection
  getReceivers()Ljava/util/List; = Receivers
  getRemoteDescription()Lorg/webrtc/SessionDescription; = RemoteDescription
  getSenders()Ljava/util/List; = Senders
  getTransceivers()Ljava/util/List; = Transceivers
  addIceCandidate(Lorg/webrtc/IceCandidate;)Z = AddIceCandidate(Org.Webrtc.IceCandidate)
  addIceCandidate(Lorg/webrtc/IceCandidate;Lorg/webrtc/AddIceObserver;)V = AddIceCandidate(Org.Webrtc.IceCandidate, Org.Webrtc.IAddIceObserver)
  addStream(Lorg/webrtc/MediaStream;)Z = AddStream(Org.Webrtc.MediaStream)
  addTrack(Lorg/webrtc/MediaStreamTrack;)Lorg/webrtc/RtpSender; = AddTrack(Org.Webrtc.MediaStreamTrack)
  addTrack(Lorg/webrtc/MediaStreamTrack;Ljava/util/List;)Lorg/webrtc/RtpSender; = AddTrack(Org.Webrtc.MediaStreamTrack, System.Collections.Generic.IList<string>)
  addTransceiver(Lorg/webrtc/MediaStreamTrack;)Lorg/webrtc/RtpTransceiver; = AddTransceiver(Org.Webrtc.MediaStreamTrack)
  addTransceiver(Lorg/webrtc/MediaStreamTrack;Lorg/webrtc/RtpTransceiver$RtpTransceiverInit;)Lorg/webrtc/RtpTransceiver; = AddTransceiver(Org.Webrtc.MediaStreamTrack, Org.Webrtc.RtpTransceiver.RtpTransceiverInit)
  addTransceiver(Lorg/webrtc/MediaStreamTrack$MediaType;)Lorg/webrtc/RtpTransceiver; = AddTransceiver(Org.Webrtc.MediaStreamTrack.MediaType)
  addTransceiver(Lorg/webrtc/MediaStreamTrack$MediaType;Lorg/webrtc/RtpTransceiver$RtpTransceiverInit;)Lorg/webrtc/RtpTransceiver; = AddTransceiver(Org.Webrtc.MediaStreamTrack.MediaType, Org.Webrtc.RtpTransceiver.RtpTransceiverInit)
  close()V = Close()
  connectionState()Lorg/webrtc/PeerConnection$PeerConnectionState; = ConnectionState()
  createAnswer(Lorg/webrtc/SdpObserver;Lorg/webrtc/MediaConstraints;)V = CreateAnswer(Org.Webrtc.ISdpObserver, Org.Webrtc.MediaConstraints)
  createDataChannel(Ljava/lang/String;Lorg/webrtc/DataChannel$Init;)Lorg/webrtc/DataChannel; = CreateDataChannel(string, Org.Webrtc.DataChannel.Init)
  createNativePeerConnectionObserver(Lorg/webrtc/PeerConnection$Observer;)J = CreateNativePeerConnectionObserver(Org.Webrtc.PeerConnection.IObserver)
  createOffer(Lorg/webrtc/SdpObserver;Lorg/webrtc/MediaConstraints;)V = CreateOffer(Org.Webrtc.ISdpObserver, Org.Webrtc.MediaConstraints)
  createSender(Ljava/lang/String;Ljava/lang/String;)Lorg/webrtc/RtpSender; = CreateSender(string, string)
  dispose()V = Dispose()
  getStats(Lorg/webrtc/RTCStatsCollectorCallback;)V = GetStats(Org.Webrtc.IRTCStatsCollectorCallback)
  getStats(Lorg/webrtc/StatsObserver;Lorg/webrtc/MediaStreamTrack;)Z = GetStats(Org.Webrtc.IStatsObserver, Org.Webrtc.MediaStreamTrack)
  iceConnectionState()Lorg/webrtc/PeerConnection$IceConnectionState; = InvokeIceConnectionState()
  iceGatheringState()Lorg/webrtc/PeerConnection$IceGatheringState; = InvokeIceGatheringState()
  signalingState()Lorg/webrtc/PeerConnection$SignalingState; = InvokeSignalingState()
  removeIceCandidates([Lorg/webrtc/IceCandidate;)Z = RemoveIceCandidates(Org.Webrtc.IceCandidate[])
  removeStream(Lorg/webrtc/MediaStream;)V = RemoveStream(Org.Webrtc.MediaStream)
  removeTrack(Lorg/webrtc/RtpSender;)Z = RemoveTrack(Org.Webrtc.RtpSender)
  restartIce()V = RestartIce()
  setAudioPlayout(Z)V = SetAudioPlayout(bool)
  setAudioRecording(Z)V = SetAudioRecording(bool)
  setBitrate(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Z = SetBitrate(Java.Lang.Integer, Java.Lang.Integer, Java.Lang.Integer)
  setConfiguration(Lorg/webrtc/PeerConnection$RTCConfiguration;)Z = SetConfiguration(Org.Webrtc.PeerConnection.RTCConfiguration)
  setLocalDescription(Lorg/webrtc/SdpObserver;)V = SetLocalDescription(Org.Webrtc.ISdpObserver)
  setLocalDescription(Lorg/webrtc/SdpObserver;Lorg/webrtc/SessionDescription;)V = SetLocalDescription(Org.Webrtc.ISdpObserver, Org.Webrtc.SessionDescription)
  setRemoteDescription(Lorg/webrtc/SdpObserver;Lorg/webrtc/SessionDescription;)V = SetRemoteDescription(Org.Webrtc.ISdpObserver, Org.Webrtc.SessionDescription)
  startRtcEventLog(II)Z = StartRtcEventLog(int, int)
  stopRtcEventLog()V = StopRtcEventLog()
org/webrtc/PeerConnectionDependencies = Org.Webrtc.PeerConnectionDependencies
  builder(Lorg/webrtc/PeerConnection$Observer;)Lorg/webrtc/PeerConnectionDependencies$Builder; = InvokeBuilder(Org.Webrtc.PeerConnection.IObserver)
org/webrtc/PeerConnectionFactory = Org.Webrtc.PeerConnectionFactory
  TRIAL_ENABLED = TrialEnabled
  VIDEO_FRAME_EMIT_TRIAL = VideoFrameEmitTrial
  getNativeOwnedFactoryAndThreads()J = NativeOwnedFactoryAndThreads
  getNativePeerConnectionFactory()J = NativePeerConnectionFactory
  createAudioSource(Lorg/webrtc/MediaConstraints;)Lorg/webrtc/AudioSource; = CreateAudioSource(Org.Webrtc.MediaConstraints)
  createAudioTrack(Ljava/lang/String;Lorg/webrtc/AudioSource;)Lorg/webrtc/AudioTrack; = CreateAudioTrack(string, Org.Webrtc.AudioSource)
  createLocalMediaStream(Ljava/lang/String;)Lorg/webrtc/MediaStream; = CreateLocalMediaStream(string)
  createPeerConnection(Ljava/util/List;Lorg/webrtc/MediaConstraints;Lorg/webrtc/PeerConnection$Observer;)Lorg/webrtc/PeerConnection; = CreatePeerConnection(System.Collections.Generic.IList<Org.Webrtc.PeerConnection.IceServer>, Org.Webrtc.MediaConstraints, Org.Webrtc.PeerConnection.IObserver)
  createPeerConnection(Ljava/util/List;Lorg/webrtc/PeerConnection$Observer;)Lorg/webrtc/PeerConnection; = CreatePeerConnection(System.Collections.Generic.IList<Org.Webrtc.PeerConnection.IceServer>, Org.Webrtc.PeerConnection.IObserver)
  createPeerConnection(Lorg/webrtc/PeerConnection$RTCConfiguration;Lorg/webrtc/MediaConstraints;Lorg/webrtc/PeerConnection$Observer;)Lorg/webrtc/PeerConnection; = CreatePeerConnection(Org.Webrtc.PeerConnection.RTCConfiguration, Org.Webrtc.MediaConstraints, Org.Webrtc.PeerConnection.IObserver)
  createPeerConnection(Lorg/webrtc/PeerConnection$RTCConfiguration;Lorg/webrtc/PeerConnection$Observer;)Lorg/webrtc/PeerConnection; = CreatePeerConnection(Org.Webrtc.PeerConnection.RTCConfiguration, Org.Webrtc.PeerConnection.IObserver)
  createPeerConnection(Lorg/webrtc/PeerConnection$RTCConfiguration;Lorg/webrtc/PeerConnectionDependencies;)Lorg/webrtc/PeerConnection; = CreatePeerConnection(Org.Webrtc.PeerConnection.RTCConfiguration, Org.Webrtc.PeerConnectionDependencies)
  createVideoSource(Z)Lorg/webrtc/VideoSource; = CreateVideoSource(bool)
  createVideoSource(ZZ)Lorg/webrtc/VideoSource; = CreateVideoSource(bool, bool)
  createVideoTrack(Ljava/lang/String;Lorg/webrtc/VideoSource;)Lorg/webrtc/VideoTrack; = CreateVideoTrack(string, Org.Webrtc.VideoSource)
  dispose()V = Dispose()
  fieldTrialsFindFullName(Ljava/lang/String;)Ljava/lang/String; = FieldTrialsFindFullName(string)
  initialize(Lorg/webrtc/PeerConnectionFactory$InitializationOptions;)V = Initialize(Org.Webrtc.PeerConnectionFactory.InitializationOptions)
  initializeFieldTrials(Ljava/lang/String;)V = InitializeFieldTrials(string)
  builder()Lorg/webrtc/PeerConnectionFactory$Builder; = InvokeBuilder()
  printInternalStackTraces(Z)V = PrintInternalStackTraces(bool)
  printStackTraces()V = PrintStackTraces()
  shutdownInternalTracer()V = ShutdownInternalTracer()
  startAecDump(II)Z = StartAecDump(int, int)
  startInternalTracingCapture(Ljava/lang/String;)Z = StartInternalTracingCapture(string)
  stopAecDump()V = StopAecDump()
  stopInternalTracingCapture()V = StopInternalTracingCapture()
org/webrtc/PlatformSoftwareVideoDecoderFactory = Org.Webrtc.PlatformSoftwareVideoDecoderFactory
  <init>(Lorg/webrtc/EglBase$Context;)V = .ctor(Org.Webrtc.IEglBase.IContext)
  createDecoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoDecoder; = CreateDecoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/Predicate = Org.Webrtc.IPredicate
  and(Lorg/webrtc/Predicate;)Lorg/webrtc/Predicate; = And(Org.Webrtc.IPredicate)
  negate()Lorg/webrtc/Predicate; = Negate()
  or(Lorg/webrtc/Predicate;)Lorg/webrtc/Predicate; = Or(Org.Webrtc.IPredicate)
  test(Ljava/lang/Object;)Z = Test(Java.Lang.Object)
org/webrtc/Priority = Org.Webrtc.IPriority
  HIGH = High
  LOW = Low
  MEDIUM = Medium
  VERY_LOW = VeryLow
org/webrtc/RefCounted = Org.Webrtc.IRefCounted
  release()V = Release()
  retain()V = Retain()
org/webrtc/RendererCommon = Org.Webrtc.RendererCommon
  <init>()V = .ctor()
  convertMatrixFromAndroidGraphicsMatrix(Landroid/graphics/Matrix;)[F = ConvertMatrixFromAndroidGraphicsMatrix(Android.Graphics.Matrix)
  convertMatrixToAndroidGraphicsMatrix([F)Landroid/graphics/Matrix; = ConvertMatrixToAndroidGraphicsMatrix(float[])
  getDisplaySize(FFII)Landroid/graphics/Point; = GetDisplaySize(float, float, int, int)
  getDisplaySize(Lorg/webrtc/RendererCommon$ScalingType;FII)Landroid/graphics/Point; = GetDisplaySize(Org.Webrtc.RendererCommon.ScalingType, float, int, int)
  getLayoutMatrix(ZFF)[F = GetLayoutMatrix(bool, float, float)
org/webrtc/RtcCertificatePem = Org.Webrtc.RtcCertificatePem
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  certificate = Certificate
  privateKey = PrivateKey
  generateCertificate()Lorg/webrtc/RtcCertificatePem; = GenerateCertificate()
  generateCertificate(J)Lorg/webrtc/RtcCertificatePem; = GenerateCertificate(long)
  generateCertificate(Lorg/webrtc/PeerConnection$KeyType;)Lorg/webrtc/RtcCertificatePem; = GenerateCertificate(Org.Webrtc.PeerConnection.KeyType)
  generateCertificate(Lorg/webrtc/PeerConnection$KeyType;J)Lorg/webrtc/RtcCertificatePem; = GenerateCertificate(Org.Webrtc.PeerConnection.KeyType, long)
org/webrtc/RTCStats = Org.Webrtc.RTCStats
  <init>(JLjava/lang/String;Ljava/lang/String;Ljava/util/Map;)V = .ctor(long, string, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  getId()Ljava/lang/String; = Id
  getMembers()Ljava/util/Map; = Members
  getTimestampUs()D = TimestampUs
  getType()Ljava/lang/String; = Type
org/webrtc/RTCStatsCollectorCallback = Org.Webrtc.IRTCStatsCollectorCallback
  onStatsDelivered(Lorg/webrtc/RTCStatsReport;)V = OnStatsDelivered(Org.Webrtc.RTCStatsReport)
org/webrtc/RTCStatsReport = Org.Webrtc.RTCStatsReport
  <init>(JLjava/util/Map;)V = .ctor(long, System.Collections.Generic.IDictionary<string, Org.Webrtc.RTCStats>)
  getStatsMap()Ljava/util/Map; = StatsMap
  getTimestampUs()D = TimestampUs
org/webrtc/RtpParameters = Org.Webrtc.RtpParameters
  codecs = Codecs
  degradationPreference = DegradationPreference
  encodings = Encodings
  transactionId = TransactionId
  getHeaderExtensions()Ljava/util/List; = HeaderExtensions
  getRtcp()Lorg/webrtc/RtpParameters$Rtcp; = GetRtcp()
org/webrtc/RtpReceiver = Org.Webrtc.RtpReceiver
  <init>(J)V = .ctor(long)
  getParameters()Lorg/webrtc/RtpParameters; = Parameters
  dispose()V = Dispose()
  id()Ljava/lang/String; = Id()
  setFrameDecryptor(Lorg/webrtc/FrameDecryptor;)V = SetFrameDecryptor(Org.Webrtc.IFrameDecryptor)
  SetObserver(Lorg/webrtc/RtpReceiver$Observer;)V = SetObserver(Org.Webrtc.RtpReceiver.IObserver)
  track()Lorg/webrtc/MediaStreamTrack; = Track()
org/webrtc/RtpSender = Org.Webrtc.RtpSender
  <init>(J)V = .ctor(long)
  getParameters()Lorg/webrtc/RtpParameters; = Parameters
  getStreams()Ljava/util/List; = Streams
  setStreams(Ljava/util/List;)V = Streams
  dispose()V = Dispose()
  dtmf()Lorg/webrtc/DtmfSender; = Dtmf()
  id()Ljava/lang/String; = Id()
  setFrameEncryptor(Lorg/webrtc/FrameEncryptor;)V = SetFrameEncryptor(Org.Webrtc.IFrameEncryptor)
  setParameters(Lorg/webrtc/RtpParameters;)Z = SetParameters(Org.Webrtc.RtpParameters)
  setTrack(Lorg/webrtc/MediaStreamTrack;Z)Z = SetTrack(Org.Webrtc.MediaStreamTrack, bool)
  track()Lorg/webrtc/MediaStreamTrack; = Track()
org/webrtc/RtpTransceiver = Org.Webrtc.RtpTransceiver
  <init>(J)V = .ctor(long)
  getCurrentDirection()Lorg/webrtc/RtpTransceiver$RtpTransceiverDirection; = CurrentDirection
  getDirection()Lorg/webrtc/RtpTransceiver$RtpTransceiverDirection; = Direction
  isStopped()Z = IsStopped
  getMediaType()Lorg/webrtc/MediaStreamTrack$MediaType; = MediaType
  getMid()Ljava/lang/String; = Mid
  getReceiver()Lorg/webrtc/RtpReceiver; = Receiver
  getSender()Lorg/webrtc/RtpSender; = Sender
  dispose()V = Dispose()
  setDirection(Lorg/webrtc/RtpTransceiver$RtpTransceiverDirection;)Z = SetDirection(Org.Webrtc.RtpTransceiver.RtpTransceiverDirection)
  stop()V = Stop()
  stopInternal()V = StopInternal()
  stopStandard()V = StopStandard()
org/webrtc/ScreenCapturerAndroid = Org.Webrtc.ScreenCapturerAndroid
  <init>(Landroid/content/Intent;Landroid/media/projection/MediaProjection$Callback;)V = .ctor(Android.Content.Intent, Android.Media.Projection.MediaProjection.Callback)
  isScreencast()Z = IsScreencast
  getMediaProjection()Landroid/media/projection/MediaProjection; = MediaProjection
  getNumCapturedFrames()J = NumCapturedFrames
  changeCaptureFormat(III)V = ChangeCaptureFormat(int, int, int)
  dispose()V = Dispose()
  initialize(Lorg/webrtc/SurfaceTextureHelper;Landroid/content/Context;Lorg/webrtc/CapturerObserver;)V = Initialize(Org.Webrtc.SurfaceTextureHelper, Android.Content.Context, Org.Webrtc.ICapturerObserver)
  onFrame(Lorg/webrtc/VideoFrame;)V = OnFrame(Org.Webrtc.VideoFrame)
  startCapture(III)V = StartCapture(int, int, int)
  stopCapture()V = StopCapture()
org/webrtc/SdpObserver = Org.Webrtc.ISdpObserver
  onCreateFailure(Ljava/lang/String;)V = OnCreateFailure(string)
  onCreateSuccess(Lorg/webrtc/SessionDescription;)V = OnCreateSuccess(Org.Webrtc.SessionDescription)
  onSetFailure(Ljava/lang/String;)V = OnSetFailure(string)
  onSetSuccess()V = OnSetSuccess()
org/webrtc/SessionDescription = Org.Webrtc.SessionDescription
  <init>(Lorg/webrtc/SessionDescription$Type;Ljava/lang/String;)V = .ctor(Org.Webrtc.SessionDescription.Type, string)
  description = Description
  type = Type
org/webrtc/Size = Org.Webrtc.Size
  <init>(II)V = .ctor(int, int)
  height = Height
  width = Width
org/webrtc/SoftwareVideoDecoderFactory = Org.Webrtc.SoftwareVideoDecoderFactory
  <init>()V = .ctor()
  createDecoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoDecoder; = CreateDecoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/SoftwareVideoEncoderFactory = Org.Webrtc.SoftwareVideoEncoderFactory
  <init>()V = .ctor()
  createEncoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoEncoder; = CreateEncoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/SSLCertificateVerifier = Org.Webrtc.ISSLCertificateVerifier
  verify([B)Z = Verify(byte[])
org/webrtc/StatsObserver = Org.Webrtc.IStatsObserver
  onComplete([Lorg/webrtc/StatsReport;)V = OnComplete(Org.Webrtc.StatsReport[])
org/webrtc/StatsReport = Org.Webrtc.StatsReport
  <init>(Ljava/lang/String;Ljava/lang/String;D[Lorg/webrtc/StatsReport$Value;)V = .ctor(string, string, double, Org.Webrtc.StatsReport.Value[])
  id = Id
  timestamp = Timestamp
  type = Type
  values = Values
org/webrtc/SurfaceEglRenderer = Org.Webrtc.SurfaceEglRenderer
  <init>(Ljava/lang/String;)V = .ctor(string)
  init(Lorg/webrtc/EglBase$Context;Lorg/webrtc/RendererCommon$RendererEvents;[ILorg/webrtc/RendererCommon$GlDrawer;)V = Init(Org.Webrtc.IEglBase.IContext, Org.Webrtc.RendererCommon.IRendererEvents, int[], Org.Webrtc.RendererCommon.IGlDrawer)
  surfaceChanged(Landroid/view/SurfaceHolder;III)V = SurfaceChanged(Android.Views.ISurfaceHolder, Android.Graphics.Format, int, int)
  surfaceCreated(Landroid/view/SurfaceHolder;)V = SurfaceCreated(Android.Views.ISurfaceHolder)
  surfaceDestroyed(Landroid/view/SurfaceHolder;)V = SurfaceDestroyed(Android.Views.ISurfaceHolder)
org/webrtc/SurfaceTextureHelper = Org.Webrtc.SurfaceTextureHelper
  getHandler()Landroid/os/Handler; = Handler
  isTextureInUse()Z = IsTextureInUse
  getSurfaceTexture()Landroid/graphics/SurfaceTexture; = SurfaceTexture
  create(Ljava/lang/String;Lorg/webrtc/EglBase$Context;)Lorg/webrtc/SurfaceTextureHelper; = Create(string, Org.Webrtc.IEglBase.IContext)
  create(Ljava/lang/String;Lorg/webrtc/EglBase$Context;Z)Lorg/webrtc/SurfaceTextureHelper; = Create(string, Org.Webrtc.IEglBase.IContext, bool)
  create(Ljava/lang/String;Lorg/webrtc/EglBase$Context;ZLorg/webrtc/YuvConverter;)Lorg/webrtc/SurfaceTextureHelper; = Create(string, Org.Webrtc.IEglBase.IContext, bool, Org.Webrtc.YuvConverter)
  create(Ljava/lang/String;Lorg/webrtc/EglBase$Context;ZLorg/webrtc/YuvConverter;Lorg/webrtc/SurfaceTextureHelper$FrameRefMonitor;)Lorg/webrtc/SurfaceTextureHelper; = Create(string, Org.Webrtc.IEglBase.IContext, bool, Org.Webrtc.YuvConverter, Org.Webrtc.SurfaceTextureHelper.IFrameRefMonitor)
  dispose()V = Dispose()
  forceFrame()V = ForceFrame()
  setFrameRotation(I)V = SetFrameRotation(int)
  setTextureSize(II)V = SetTextureSize(int, int)
  startListening(Lorg/webrtc/VideoSink;)V = StartListening(Org.Webrtc.IVideoSink)
  stopListening()V = StopListening()
  textureToYuv(Lorg/webrtc/VideoFrame$TextureBuffer;)Lorg/webrtc/VideoFrame$I420Buffer; = TextureToYuv(Org.Webrtc.VideoFrame.ITextureBuffer)
org/webrtc/SurfaceViewRenderer = Org.Webrtc.SurfaceViewRenderer
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  addFrameListener(Lorg/webrtc/EglRenderer$FrameListener;F)V = AddFrameListener(Org.Webrtc.EglRenderer.IFrameListener, float)
  addFrameListener(Lorg/webrtc/EglRenderer$FrameListener;FLorg/webrtc/RendererCommon$GlDrawer;)V = AddFrameListener(Org.Webrtc.EglRenderer.IFrameListener, float, Org.Webrtc.RendererCommon.IGlDrawer)
  clearImage()V = ClearImage()
  disableFpsReduction()V = DisableFpsReduction()
  init(Lorg/webrtc/EglBase$Context;Lorg/webrtc/RendererCommon$RendererEvents;)V = Init(Org.Webrtc.IEglBase.IContext, Org.Webrtc.RendererCommon.IRendererEvents)
  init(Lorg/webrtc/EglBase$Context;Lorg/webrtc/RendererCommon$RendererEvents;[ILorg/webrtc/RendererCommon$GlDrawer;)V = Init(Org.Webrtc.IEglBase.IContext, Org.Webrtc.RendererCommon.IRendererEvents, int[], Org.Webrtc.RendererCommon.IGlDrawer)
  onFirstFrameRendered()V = OnFirstFrameRendered()
  onFrame(Lorg/webrtc/VideoFrame;)V = OnFrame(Org.Webrtc.VideoFrame)
  onFrameResolutionChanged(III)V = OnFrameResolutionChanged(int, int, int)
  pauseVideo()V = PauseVideo()
  release()V = Release()
  removeFrameListener(Lorg/webrtc/EglRenderer$FrameListener;)V = RemoveFrameListener(Org.Webrtc.EglRenderer.IFrameListener)
  setEnableHardwareScaler(Z)V = SetEnableHardwareScaler(bool)
  setFpsReduction(F)V = SetFpsReduction(float)
  setMirror(Z)V = SetMirror(bool)
  setScalingType(Lorg/webrtc/RendererCommon$ScalingType;)V = SetScalingType(Org.Webrtc.RendererCommon.ScalingType)
  setScalingType(Lorg/webrtc/RendererCommon$ScalingType;Lorg/webrtc/RendererCommon$ScalingType;)V = SetScalingType(Org.Webrtc.RendererCommon.ScalingType, Org.Webrtc.RendererCommon.ScalingType)
  surfaceChanged(Landroid/view/SurfaceHolder;III)V = SurfaceChanged(Android.Views.ISurfaceHolder, Android.Graphics.Format, int, int)
  surfaceCreated(Landroid/view/SurfaceHolder;)V = SurfaceCreated(Android.Views.ISurfaceHolder)
  surfaceDestroyed(Landroid/view/SurfaceHolder;)V = SurfaceDestroyed(Android.Views.ISurfaceHolder)
org/webrtc/TextureBufferImpl = Org.Webrtc.TextureBufferImpl
  <init>(IILorg/webrtc/VideoFrame$TextureBuffer$Type;ILandroid/graphics/Matrix;Landroid/os/Handler;Lorg/webrtc/YuvConverter;Ljava/lang/Runnable;)V = .ctor(int, int, Org.Webrtc.VideoFrame.ITextureBuffer.Type, int, Android.Graphics.Matrix, Android.OS.Handler, Org.Webrtc.YuvConverter, Java.Lang.IRunnable)
  getHeight()I = Height
  getTextureId()I = TextureId
  getToI420Handler()Landroid/os/Handler; = ToI420Handler
  getTransformMatrix()Landroid/graphics/Matrix; = TransformMatrix
  getType()Lorg/webrtc/VideoFrame$TextureBuffer$Type; = Type
  getUnscaledHeight()I = UnscaledHeight
  getUnscaledWidth()I = UnscaledWidth
  getWidth()I = Width
  getYuvConverter()Lorg/webrtc/YuvConverter; = YuvConverter
  applyTransformMatrix(Landroid/graphics/Matrix;II)Lorg/webrtc/TextureBufferImpl; = ApplyTransformMatrix(Android.Graphics.Matrix, int, int)
  cropAndScale(IIIIII)Lorg/webrtc/VideoFrame$Buffer; = CropAndScale(int, int, int, int, int, int)
  release()V = Release()
  retain()V = Retain()
  toI420()Lorg/webrtc/VideoFrame$I420Buffer; = ToI420()
org/webrtc/ThreadUtils = Org.Webrtc.ThreadUtils
  <init>()V = .ctor()
  awaitUninterruptibly(Ljava/util/concurrent/CountDownLatch;)V = AwaitUninterruptibly(Java.Util.Concurrent.CountDownLatch)
  awaitUninterruptibly(Ljava/util/concurrent/CountDownLatch;J)Z = AwaitUninterruptibly(Java.Util.Concurrent.CountDownLatch, long)
  checkIsOnMainThread()V = CheckIsOnMainThread()
  executeUninterruptibly(Lorg/webrtc/ThreadUtils$BlockingOperation;)V = ExecuteUninterruptibly(Org.Webrtc.ThreadUtils.IBlockingOperation)
  invokeAtFrontUninterruptibly(Landroid/os/Handler;Ljava/lang/Runnable;)V = InvokeAtFrontUninterruptibly(Android.OS.Handler, Java.Lang.IRunnable)
  invokeAtFrontUninterruptibly(Landroid/os/Handler;Ljava/util/concurrent/Callable;)Ljava/lang/Object; = InvokeAtFrontUninterruptibly(Android.OS.Handler, Java.Util.Concurrent.ICallable)
  joinUninterruptibly(Ljava/lang/Thread;)V = JoinUninterruptibly(Java.Lang.Thread)
  joinUninterruptibly(Ljava/lang/Thread;J)Z = JoinUninterruptibly(Java.Lang.Thread, long)
org/webrtc/TimestampAligner = Org.Webrtc.TimestampAligner
  <init>()V = .ctor()
  getRtcTimeNanos()J = RtcTimeNanos
  dispose()V = Dispose()
  translateTimestamp(J)J = TranslateTimestamp(long)
org/webrtc/TurnCustomizer = Org.Webrtc.TurnCustomizer
  <init>(J)V = .ctor(long)
  dispose()V = Dispose()
org/webrtc/VideoCapturer = Org.Webrtc.IVideoCapturer
  isScreencast()Z = IsScreencast
  changeCaptureFormat(III)V = ChangeCaptureFormat(int, int, int)
  dispose()V = Dispose()
  initialize(Lorg/webrtc/SurfaceTextureHelper;Landroid/content/Context;Lorg/webrtc/CapturerObserver;)V = Initialize(Org.Webrtc.SurfaceTextureHelper, Android.Content.Context, Org.Webrtc.ICapturerObserver)
  startCapture(III)V = StartCapture(int, int, int)
  stopCapture()V = StopCapture()
org/webrtc/VideoCodecInfo = Org.Webrtc.VideoCodecInfo
  <init>(ILjava/lang/String;Ljava/util/Map;)V = .ctor(int, string, System.Collections.Generic.IDictionary<string, string>)
  <init>(Ljava/lang/String;Ljava/util/Map;)V = .ctor(string, System.Collections.Generic.IDictionary<string, string>)
  H264_CONSTRAINED_BASELINE_3_1 = H264ConstrainedBaseline31
  H264_CONSTRAINED_HIGH_3_1 = H264ConstrainedHigh31
  H264_FMTP_LEVEL_ASYMMETRY_ALLOWED = H264FmtpLevelAsymmetryAllowed
  H264_FMTP_PACKETIZATION_MODE = H264FmtpPacketizationMode
  H264_FMTP_PROFILE_LEVEL_ID = H264FmtpProfileLevelId
  H264_LEVEL_3_1 = H264Level31
  H264_PROFILE_CONSTRAINED_BASELINE = H264ProfileConstrainedBaseline
  H264_PROFILE_CONSTRAINED_HIGH = H264ProfileConstrainedHigh
  name = Name
  params = Params
  payload = Payload
org/webrtc/VideoCodecStatus = Org.Webrtc.VideoCodecStatus
  ERROR = Error
  ERR_PARAMETER = ErrParameter
  ERR_REQUEST_SLI = ErrRequestSli
  ERR_SIZE = ErrSize
  FALLBACK_SOFTWARE = FallbackSoftware
  LEVEL_EXCEEDED = LevelExceeded
  MEMORY = Memory
  NO_OUTPUT = NoOutput
  OK = Ok
  REQUEST_SLI = RequestSli
  TARGET_BITRATE_OVERSHOOT = TargetBitrateOvershoot
  TIMEOUT = Timeout
  UNINITIALIZED = Uninitialized
  getNumber()I = Number
  valueOf(Ljava/lang/String;)Lorg/webrtc/VideoCodecStatus; = ValueOf(string)
  values()[Lorg/webrtc/VideoCodecStatus; = Values()
org/webrtc/VideoDecoder = Org.Webrtc.IVideoDecoder
  getImplementationName()Ljava/lang/String; = ImplementationName
  createNativeVideoDecoder()J = CreateNativeVideoDecoder()
  decode(Lorg/webrtc/EncodedImage;Lorg/webrtc/VideoDecoder$DecodeInfo;)Lorg/webrtc/VideoCodecStatus; = Decode(Org.Webrtc.EncodedImage, Org.Webrtc.IVideoDecoder.DecodeInfo)
  initDecode(Lorg/webrtc/VideoDecoder$Settings;Lorg/webrtc/VideoDecoder$Callback;)Lorg/webrtc/VideoCodecStatus; = InitDecode(Org.Webrtc.IVideoDecoder.Settings, Org.Webrtc.IVideoDecoder.ICallback)
  release()Lorg/webrtc/VideoCodecStatus; = Release()
org/webrtc/VideoDecoderFactory = Org.Webrtc.IVideoDecoderFactory
  createDecoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoDecoder; = CreateDecoder(Org.Webrtc.VideoCodecInfo)
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/VideoDecoderFallback = Org.Webrtc.VideoDecoderFallback
  <init>(Lorg/webrtc/VideoDecoder;Lorg/webrtc/VideoDecoder;)V = .ctor(Org.Webrtc.IVideoDecoder, Org.Webrtc.IVideoDecoder)
  createNativeVideoDecoder()J = CreateNativeVideoDecoder()
org/webrtc/VideoEncoder = Org.Webrtc.IVideoEncoder
  getImplementationName()Ljava/lang/String; = ImplementationName
  isHardwareEncoder()Z = IsHardwareEncoder
  createNativeVideoEncoder()J = CreateNativeVideoEncoder()
  encode(Lorg/webrtc/VideoFrame;Lorg/webrtc/VideoEncoder$EncodeInfo;)Lorg/webrtc/VideoCodecStatus; = Encode(Org.Webrtc.VideoFrame, Org.Webrtc.IVideoEncoder.EncodeInfo)
  getEncoderInfo()Lorg/webrtc/VideoEncoder$EncoderInfo; = GetEncoderInfo()
  getResolutionBitrateLimits()[Lorg/webrtc/VideoEncoder$ResolutionBitrateLimits; = GetResolutionBitrateLimits()
  getScalingSettings()Lorg/webrtc/VideoEncoder$ScalingSettings; = GetScalingSettings()
  initEncode(Lorg/webrtc/VideoEncoder$Settings;Lorg/webrtc/VideoEncoder$Callback;)Lorg/webrtc/VideoCodecStatus; = InitEncode(Org.Webrtc.IVideoEncoder.Settings, Org.Webrtc.IVideoEncoder.ICallback)
  release()Lorg/webrtc/VideoCodecStatus; = Release()
  setRateAllocation(Lorg/webrtc/VideoEncoder$BitrateAllocation;I)Lorg/webrtc/VideoCodecStatus; = SetRateAllocation(Org.Webrtc.IVideoEncoder.BitrateAllocation, int)
  setRates(Lorg/webrtc/VideoEncoder$RateControlParameters;)Lorg/webrtc/VideoCodecStatus; = SetRates(Org.Webrtc.IVideoEncoder.RateControlParameters)
org/webrtc/VideoEncoderFactory = Org.Webrtc.IVideoEncoderFactory
  getEncoderSelector()Lorg/webrtc/VideoEncoderFactory$VideoEncoderSelector; = EncoderSelector
  createEncoder(Lorg/webrtc/VideoCodecInfo;)Lorg/webrtc/VideoEncoder; = CreateEncoder(Org.Webrtc.VideoCodecInfo)
  getImplementations()[Lorg/webrtc/VideoCodecInfo; = GetImplementations()
  getSupportedCodecs()[Lorg/webrtc/VideoCodecInfo; = GetSupportedCodecs()
org/webrtc/VideoEncoderFallback = Org.Webrtc.VideoEncoderFallback
  <init>(Lorg/webrtc/VideoEncoder;Lorg/webrtc/VideoEncoder;)V = .ctor(Org.Webrtc.IVideoEncoder, Org.Webrtc.IVideoEncoder)
  isHardwareEncoder()Z = IsHardwareEncoder
  createNativeVideoEncoder()J = CreateNativeVideoEncoder()
org/webrtc/VideoFileRenderer = Org.Webrtc.VideoFileRenderer
  <init>(Ljava/lang/String;IILorg/webrtc/EglBase$Context;)V = .ctor(string, int, int, Org.Webrtc.IEglBase.IContext)
  onFrame(Lorg/webrtc/VideoFrame;)V = OnFrame(Org.Webrtc.VideoFrame)
  release()V = Release()
org/webrtc/VideoFrame = Org.Webrtc.VideoFrame
  <init>(Lorg/webrtc/VideoFrame$Buffer;IJ)V = .ctor(Org.Webrtc.VideoFrame.IBuffer, int, long)
  getBuffer()Lorg/webrtc/VideoFrame$Buffer; = Buffer
  getRotatedHeight()I = RotatedHeight
  getRotatedWidth()I = RotatedWidth
  getRotation()I = Rotation
  getTimestampNs()J = TimestampNs
  release()V = Release()
  retain()V = Retain()
org/webrtc/VideoFrameBufferType = Org.Webrtc.IVideoFrameBufferType
  I010 = I010
  I420 = I420
  I420A = I420a
  I422 = I422
  I444 = I444
  NATIVE = Native
  NV12 = Nv12
org/webrtc/VideoFrameDrawer = Org.Webrtc.VideoFrameDrawer
  <init>()V = .ctor()
  TAG = Tag
  drawFrame(Lorg/webrtc/VideoFrame;Lorg/webrtc/RendererCommon$GlDrawer;)V = DrawFrame(Org.Webrtc.VideoFrame, Org.Webrtc.RendererCommon.IGlDrawer)
  drawFrame(Lorg/webrtc/VideoFrame;Lorg/webrtc/RendererCommon$GlDrawer;Landroid/graphics/Matrix;)V = DrawFrame(Org.Webrtc.VideoFrame, Org.Webrtc.RendererCommon.IGlDrawer, Android.Graphics.Matrix)
  drawFrame(Lorg/webrtc/VideoFrame;Lorg/webrtc/RendererCommon$GlDrawer;Landroid/graphics/Matrix;IIII)V = DrawFrame(Org.Webrtc.VideoFrame, Org.Webrtc.RendererCommon.IGlDrawer, Android.Graphics.Matrix, int, int, int, int)
  drawTexture(Lorg/webrtc/RendererCommon$GlDrawer;Lorg/webrtc/VideoFrame$TextureBuffer;Landroid/graphics/Matrix;IIIIII)V = DrawTexture(Org.Webrtc.RendererCommon.IGlDrawer, Org.Webrtc.VideoFrame.ITextureBuffer, Android.Graphics.Matrix, int, int, int, int, int, int)
  prepareBufferForViewportSize(Lorg/webrtc/VideoFrame$Buffer;II)Lorg/webrtc/VideoFrame$Buffer; = PrepareBufferForViewportSize(Org.Webrtc.VideoFrame.IBuffer, int, int)
  release()V = Release()
org/webrtc/VideoProcessor = Org.Webrtc.IVideoProcessor
  applyFrameAdaptationParameters(Lorg/webrtc/VideoFrame;Lorg/webrtc/VideoProcessor$FrameAdaptationParameters;)Lorg/webrtc/VideoFrame; = ApplyFrameAdaptationParameters(Org.Webrtc.VideoFrame, Org.Webrtc.IVideoProcessor.FrameAdaptationParameters)
  onFrameCaptured(Lorg/webrtc/VideoFrame;Lorg/webrtc/VideoProcessor$FrameAdaptationParameters;)V = OnFrameCaptured(Org.Webrtc.VideoFrame, Org.Webrtc.IVideoProcessor.FrameAdaptationParameters)
  setSink(Lorg/webrtc/VideoSink;)V = SetSink(Org.Webrtc.IVideoSink)
org/webrtc/VideoSink = Org.Webrtc.IVideoSink
  onFrame(Lorg/webrtc/VideoFrame;)V = OnFrame(Org.Webrtc.VideoFrame)
org/webrtc/VideoSource = Org.Webrtc.VideoSource
  <init>(J)V = .ctor(long)
  getCapturerObserver()Lorg/webrtc/CapturerObserver; = CapturerObserver
  adaptOutputFormat(III)V = AdaptOutputFormat(int, int, int)
  adaptOutputFormat(IIIII)V = AdaptOutputFormat(int, int, int, int, int)
  adaptOutputFormat(Lorg/webrtc/VideoSource$AspectRatio;Ljava/lang/Integer;Lorg/webrtc/VideoSource$AspectRatio;Ljava/lang/Integer;Ljava/lang/Integer;)V = AdaptOutputFormat(Org.Webrtc.VideoSource.AspectRatio, Java.Lang.Integer, Org.Webrtc.VideoSource.AspectRatio, Java.Lang.Integer, Java.Lang.Integer)
  setIsScreencast(Z)V = SetIsScreencast(bool)
  setVideoProcessor(Lorg/webrtc/VideoProcessor;)V = SetVideoProcessor(Org.Webrtc.IVideoProcessor)
org/webrtc/VideoTrack = Org.Webrtc.VideoTrack
  <init>(J)V = .ctor(long)
  addSink(Lorg/webrtc/VideoSink;)V = AddSink(Org.Webrtc.IVideoSink)
  removeSink(Lorg/webrtc/VideoSink;)V = RemoveSink(Org.Webrtc.IVideoSink)
org/webrtc/voiceengine/BuildInfo = Org.Webrtc.Voiceengine.BuildInfo
  <init>()V = .ctor()
  getAndroidBuildId()Ljava/lang/String; = AndroidBuildId
  getBrand()Ljava/lang/String; = Brand
  getBuildRelease()Ljava/lang/String; = BuildRelease
  getBuildType()Ljava/lang/String; = BuildType
  getDevice()Ljava/lang/String; = Device
  getDeviceManufacturer()Ljava/lang/String; = DeviceManufacturer
  getDeviceModel()Ljava/lang/String; = DeviceModel
  getProduct()Ljava/lang/String; = Product
  getSdkVersion()I = SdkVersion
org/webrtc/voiceengine/WebRtcAudioEffects = Org.Webrtc.Voiceengine.WebRtcAudioEffects
  isAcousticEchoCancelerBlacklisted()Z = IsAcousticEchoCancelerBlacklisted
  isAcousticEchoCancelerSupported()Z = IsAcousticEchoCancelerSupported
  isNoiseSuppressorBlacklisted()Z = IsNoiseSuppressorBlacklisted
  isNoiseSuppressorSupported()Z = IsNoiseSuppressorSupported
  canUseAcousticEchoCanceler()Z = CanUseAcousticEchoCanceler()
  canUseNoiseSuppressor()Z = CanUseNoiseSuppressor()
  create()Lorg/webrtc/voiceengine/WebRtcAudioEffects; = Create()
  enable(I)V = Enable(int)
  release()V = Release()
  setAEC(Z)Z = SetAEC(bool)
  setNS(Z)Z = SetNS(bool)
org/webrtc/voiceengine/WebRtcAudioManager = Org.Webrtc.Voiceengine.WebRtcAudioManager
  isLowLatencyInputSupported()Z = IsLowLatencyInputSupported
  getStereoInput()Z = StereoInput
  setStereoInput(Z)V = StereoInput
  getStereoOutput()Z = StereoOutput
  setStereoOutput(Z)V = StereoOutput
  setBlacklistDeviceForOpenSLESUsage(Z)V = SetBlacklistDeviceForOpenSLESUsage(bool)
org/webrtc/voiceengine/WebRtcAudioRecord = Org.Webrtc.Voiceengine.WebRtcAudioRecord
  setAudioSource(I)V = SetAudioSource(int)
  setErrorCallback(Lorg/webrtc/voiceengine/WebRtcAudioRecord$WebRtcAudioRecordErrorCallback;)V = SetErrorCallback(Org.Webrtc.Voiceengine.WebRtcAudioRecord.IWebRtcAudioRecordErrorCallback)
  setMicrophoneMute(Z)V = SetMicrophoneMute(bool)
  setOnAudioSamplesReady(Lorg/webrtc/voiceengine/WebRtcAudioRecord$WebRtcAudioRecordSamplesReadyCallback;)V = SetOnAudioSamplesReady(Org.Webrtc.Voiceengine.WebRtcAudioRecord.IWebRtcAudioRecordSamplesReadyCallback)
org/webrtc/voiceengine/WebRtcAudioTrack = Org.Webrtc.Voiceengine.WebRtcAudioTrack
  setAudioTrackUsageAttribute(I)V = SetAudioTrackUsageAttribute(int)
  setErrorCallback(Lorg/webrtc/voiceengine/WebRtcAudioTrack$ErrorCallback;)V = SetErrorCallback(Org.Webrtc.Voiceengine.WebRtcAudioTrack.IErrorCallback)
  setErrorCallback(Lorg/webrtc/voiceengine/WebRtcAudioTrack$WebRtcAudioTrackErrorCallback;)V = SetErrorCallback(Org.Webrtc.Voiceengine.WebRtcAudioTrack.IWebRtcAudioTrackErrorCallback)
  setSpeakerMute(Z)V = SetSpeakerMute(bool)
org/webrtc/voiceengine/WebRtcAudioUtils = Org.Webrtc.Voiceengine.WebRtcAudioUtils
  <init>()V = .ctor()
  getBlackListedModelsForAecUsage()Ljava/util/List; = BlackListedModelsForAecUsage
  getBlackListedModelsForNsUsage()Ljava/util/List; = BlackListedModelsForNsUsage
  getDefaultSampleRateHz()I = DefaultSampleRateHz
  setDefaultSampleRateHz(I)V = DefaultSampleRateHz
  isAcousticEchoCancelerSupported()Z = IsAcousticEchoCancelerSupported
  isAutomaticGainControlSupported()Z = IsAutomaticGainControlSupported
  isDefaultSampleRateOverridden()Z = IsDefaultSampleRateOverridden
  isNoiseSuppressorSupported()Z = IsNoiseSuppressorSupported
  getThreadInfo()Ljava/lang/String; = ThreadInfo
  deviceIsBlacklistedForOpenSLESUsage()Z = DeviceIsBlacklistedForOpenSLESUsage()
  runningOnEmulator()Z = RunningOnEmulator()
  setWebRtcBasedAcousticEchoCanceler(Z)V = SetWebRtcBasedAcousticEchoCanceler(bool)
  setWebRtcBasedAutomaticGainControl(Z)V = SetWebRtcBasedAutomaticGainControl(bool)
  setWebRtcBasedNoiseSuppressor(Z)V = SetWebRtcBasedNoiseSuppressor(bool)
  useWebRtcBasedAcousticEchoCanceler()Z = UseWebRtcBasedAcousticEchoCanceler()
  useWebRtcBasedAutomaticGainControl()Z = UseWebRtcBasedAutomaticGainControl()
  useWebRtcBasedNoiseSuppressor()Z = UseWebRtcBasedNoiseSuppressor()
org/webrtc/WrappedNativeVideoDecoder = Org.Webrtc.WrappedNativeVideoDecoder
  <init>()V = .ctor()
  getImplementationName()Ljava/lang/String; = ImplementationName
  createNativeVideoDecoder()J = CreateNativeVideoDecoder()
  decode(Lorg/webrtc/EncodedImage;Lorg/webrtc/VideoDecoder$DecodeInfo;)Lorg/webrtc/VideoCodecStatus; = Decode(Org.Webrtc.EncodedImage, Org.Webrtc.IVideoDecoder.DecodeInfo)
  initDecode(Lorg/webrtc/VideoDecoder$Settings;Lorg/webrtc/VideoDecoder$Callback;)Lorg/webrtc/VideoCodecStatus; = InitDecode(Org.Webrtc.IVideoDecoder.Settings, Org.Webrtc.IVideoDecoder.ICallback)
  release()Lorg/webrtc/VideoCodecStatus; = Release()
org/webrtc/WrappedNativeVideoEncoder = Org.Webrtc.WrappedNativeVideoEncoder
  <init>()V = .ctor()
  getImplementationName()Ljava/lang/String; = ImplementationName
  isHardwareEncoder()Z = IsHardwareEncoder
  getScalingSettings()Lorg/webrtc/VideoEncoder$ScalingSettings; = ScalingSettings
  createNativeVideoEncoder()J = CreateNativeVideoEncoder()
  encode(Lorg/webrtc/VideoFrame;Lorg/webrtc/VideoEncoder$EncodeInfo;)Lorg/webrtc/VideoCodecStatus; = Encode(Org.Webrtc.VideoFrame, Org.Webrtc.IVideoEncoder.EncodeInfo)
  initEncode(Lorg/webrtc/VideoEncoder$Settings;Lorg/webrtc/VideoEncoder$Callback;)Lorg/webrtc/VideoCodecStatus; = InitEncode(Org.Webrtc.IVideoEncoder.Settings, Org.Webrtc.IVideoEncoder.ICallback)
  release()Lorg/webrtc/VideoCodecStatus; = Release()
  setRateAllocation(Lorg/webrtc/VideoEncoder$BitrateAllocation;I)Lorg/webrtc/VideoCodecStatus; = SetRateAllocation(Org.Webrtc.IVideoEncoder.BitrateAllocation, int)
org/webrtc/YuvConverter = Org.Webrtc.YuvConverter
  <init>()V = .ctor()
  <init>(Lorg/webrtc/VideoFrameDrawer;)V = .ctor(Org.Webrtc.VideoFrameDrawer)
  convert(Lorg/webrtc/VideoFrame$TextureBuffer;)Lorg/webrtc/VideoFrame$I420Buffer; = Convert(Org.Webrtc.VideoFrame.ITextureBuffer)
  release()V = Release()
org/webrtc/YuvHelper = Org.Webrtc.YuvHelper
  <init>()V = .ctor()
  ABGRToI420(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;III)V = ABGRToI420(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int)
  copyPlane(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;III)V = CopyPlane(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int)
  I420Copy(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)V = I420Copy(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int)
  I420Copy(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;IIIIII)V = I420Copy(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int, int, int, int)
  I420Copy(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;III)V = I420Copy(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int)
  I420Rotate(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;III)V = I420Rotate(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int)
  I420Rotate(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;IIII)V = I420Rotate(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int, int)
  I420ToNV12(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)V = I420ToNV12(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int)
  I420ToNV12(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;IIII)V = I420ToNV12(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int, int)
  I420ToNV12(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;ILjava/nio/ByteBuffer;III)V = I420ToNV12(Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, Java.Nio.ByteBuffer, int, int, int)
