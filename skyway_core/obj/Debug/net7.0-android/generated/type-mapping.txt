com/ntt/skyway/BuildConfig = Com.Ntt.Skyway.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  LIBRARY_PACKAGE_NAME = LibraryPackageName
  SkyWayVer = SkyWayVer
com/ntt/skyway/core/channel/Channel = Com.Ntt.Skyway.Core.Channel.Channel
  Companion = Companion
  getBots()Ljava/util/Set; = Bots
  getId()Ljava/lang/String; = Id
  getLocalPerson()Lcom/ntt/skyway/core/channel/member/LocalPerson; = LocalPerson
  getMembers()Ljava/util/Set; = Members
  getMetadata()Ljava/lang/String; = Metadata
  getName()Ljava/lang/String; = Name
  getNativePointer()J = NativePointer
  getOnClosedHandler()Lkotlin/jvm/functions/Function0; = OnClosedHandler
  setOnClosedHandler(Lkotlin/jvm/functions/Function0;)V = OnClosedHandler
  getOnErrorHandler()Lkotlin/jvm/functions/Function1; = OnErrorHandler
  setOnErrorHandler(Lkotlin/jvm/functions/Function1;)V = OnErrorHandler
  getOnMemberJoinedHandler()Lkotlin/jvm/functions/Function1; = OnMemberJoinedHandler
  setOnMemberJoinedHandler(Lkotlin/jvm/functions/Function1;)V = OnMemberJoinedHandler
  getOnMemberLeftHandler()Lkotlin/jvm/functions/Function1; = OnMemberLeftHandler
  setOnMemberLeftHandler(Lkotlin/jvm/functions/Function1;)V = OnMemberLeftHandler
  getOnMemberListChangedHandler()Lkotlin/jvm/functions/Function0; = OnMemberListChangedHandler
  setOnMemberListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnMemberListChangedHandler
  getOnMemberMetadataUpdatedHandler()Lkotlin/jvm/functions/Function2; = OnMemberMetadataUpdatedHandler
  setOnMemberMetadataUpdatedHandler(Lkotlin/jvm/functions/Function2;)V = OnMemberMetadataUpdatedHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnPublicationDisabledHandler()Lkotlin/jvm/functions/Function1; = OnPublicationDisabledHandler
  setOnPublicationDisabledHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationDisabledHandler
  getOnPublicationEnabledHandler()Lkotlin/jvm/functions/Function1; = OnPublicationEnabledHandler
  setOnPublicationEnabledHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationEnabledHandler
  getOnPublicationListChangedHandler()Lkotlin/jvm/functions/Function0; = OnPublicationListChangedHandler
  setOnPublicationListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnPublicationListChangedHandler
  getOnPublicationMetadataUpdatedHandler()Lkotlin/jvm/functions/Function2; = OnPublicationMetadataUpdatedHandler
  setOnPublicationMetadataUpdatedHandler(Lkotlin/jvm/functions/Function2;)V = OnPublicationMetadataUpdatedHandler
  getOnPublicationSubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationSubscribedHandler
  setOnPublicationSubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationSubscribedHandler
  getOnPublicationUnsubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationUnsubscribedHandler
  setOnPublicationUnsubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationUnsubscribedHandler
  getOnStreamPublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamPublishedHandler
  setOnStreamPublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamPublishedHandler
  getOnStreamUnpublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamUnpublishedHandler
  setOnStreamUnpublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamUnpublishedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getPublications()Ljava/util/Set; = Publications
  getSubscriptions()Ljava/util/Set; = Subscriptions
  close(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Close(Kotlin.Coroutines.IContinuation)
  create(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Create(string, string, Kotlin.Coroutines.IContinuation)
  dispose()V = Dispose()
  find(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Find(string, string, Kotlin.Coroutines.IContinuation)
  findOrCreate(Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = FindOrCreate(string, string, Kotlin.Coroutines.IContinuation)
  getState()Lcom/ntt/skyway/core/channel/Channel$State; = GetState()
  join(Lcom/ntt/skyway/core/channel/member/Member$Init;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Join(Com.Ntt.Skyway.Core.Channel.Member.Member.Init, Kotlin.Coroutines.IContinuation)
  leave(Lcom/ntt/skyway/core/channel/member/Member;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Leave(Com.Ntt.Skyway.Core.Channel.Member.Member, Kotlin.Coroutines.IContinuation)
  updateMetadata(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = UpdateMetadata(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/core/channel/member/LocalPerson = Com.Ntt.Skyway.Core.Channel.Member.LocalPerson
  PUBLISH_TIMEOUT_SEC = PublishTimeoutSec
  SUBSCRIBE_TIMEOUT_SEC = SubscribeTimeoutSec
  getOnPublicationSubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationSubscribedHandler
  setOnPublicationSubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationSubscribedHandler
  getOnPublicationUnsubscribedHandler()Lkotlin/jvm/functions/Function1; = OnPublicationUnsubscribedHandler
  setOnPublicationUnsubscribedHandler(Lkotlin/jvm/functions/Function1;)V = OnPublicationUnsubscribedHandler
  getOnStreamPublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamPublishedHandler
  setOnStreamPublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamPublishedHandler
  getOnStreamUnpublishedHandler()Lkotlin/jvm/functions/Function1; = OnStreamUnpublishedHandler
  setOnStreamUnpublishedHandler(Lkotlin/jvm/functions/Function1;)V = OnStreamUnpublishedHandler
  getSubType()Ljava/lang/String; = SubType
  getSide()Lcom/ntt/skyway/core/channel/member/Member$Side; = GetSide()
  getType()Lcom/ntt/skyway/core/channel/member/Member$Type; = GetType()
  publish(Lcom/ntt/skyway/core/content/local/LocalStream;Lcom/ntt/skyway/core/channel/Publication$Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Publish(Com.Ntt.Skyway.Core.Content.Local.LocalStream, Com.Ntt.Skyway.Core.Channel.Publication.Options, Kotlin.Coroutines.IContinuation)
  subscribe(Lcom/ntt/skyway/core/channel/Publication;Lcom/ntt/skyway/core/channel/Subscription$Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Subscribe(Com.Ntt.Skyway.Core.Channel.Publication, Com.Ntt.Skyway.Core.Channel.Subscription.Options, Kotlin.Coroutines.IContinuation)
  subscribe(Ljava/lang/String;Lcom/ntt/skyway/core/channel/Subscription$Options;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Subscribe(string, Com.Ntt.Skyway.Core.Channel.Subscription.Options, Kotlin.Coroutines.IContinuation)
  unpublish(Lcom/ntt/skyway/core/channel/Publication;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unpublish(Com.Ntt.Skyway.Core.Channel.Publication, Kotlin.Coroutines.IContinuation)
  unpublish(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unpublish(string, Kotlin.Coroutines.IContinuation)
  unsubscribe(Lcom/ntt/skyway/core/channel/Subscription;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unsubscribe(Com.Ntt.Skyway.Core.Channel.Subscription, Kotlin.Coroutines.IContinuation)
  unsubscribe(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unsubscribe(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/core/channel/member/Member = Com.Ntt.Skyway.Core.Channel.Member.Member
  <init>(Lcom/ntt/skyway/core/channel/member/Member$Dto;)V = .ctor(Com.Ntt.Skyway.Core.Channel.Member.Member.Dto)
  getChannel()Lcom/ntt/skyway/core/channel/Channel; = Channel
  getId()Ljava/lang/String; = Id
  getMetadata()Ljava/lang/String; = Metadata
  getName()Ljava/lang/String; = Name
  getNativePointer()J = NativePointer
  getOnLeftHandler()Lkotlin/jvm/functions/Function0; = OnLeftHandler
  setOnLeftHandler(Lkotlin/jvm/functions/Function0;)V = OnLeftHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnPublicationListChangedHandler()Lkotlin/jvm/functions/Function0; = OnPublicationListChangedHandler
  setOnPublicationListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnPublicationListChangedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getPublications()Ljava/util/List; = Publications
  getSubscriptions()Ljava/util/List; = Subscriptions
  getSubType()Ljava/lang/String; = SubType
  getSide()Lcom/ntt/skyway/core/channel/member/Member$Side; = GetSide()
  getState()Lcom/ntt/skyway/core/channel/member/Member$State; = GetState()
  getType()Lcom/ntt/skyway/core/channel/member/Member$Type; = GetType()
  leave(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Leave(Kotlin.Coroutines.IContinuation)
  updateMetadata(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = UpdateMetadata(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/core/channel/member/RemoteMember = Com.Ntt.Skyway.Core.Channel.Member.RemoteMember
  <init>(Lcom/ntt/skyway/core/channel/member/Member$Dto;)V = .ctor(Com.Ntt.Skyway.Core.Channel.Member.Member.Dto)
  getSide()Lcom/ntt/skyway/core/channel/member/Member$Side; = GetSide()
com/ntt/skyway/core/channel/Publication = Com.Ntt.Skyway.Core.Channel.Publication
  getChannel()Lcom/ntt/skyway/core/channel/Channel; = Channel
  getCodecCapabilities()Ljava/util/List; = CodecCapabilities
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  getEncodings()Ljava/util/List; = Encodings
  getId()Ljava/lang/String; = Id
  getMetadata()Ljava/lang/String; = Metadata
  getNativePointer()J = NativePointer
  getOnConnectionStateChangedHandler()Lkotlin/jvm/functions/Function1; = OnConnectionStateChangedHandler
  setOnConnectionStateChangedHandler(Lkotlin/jvm/functions/Function1;)V = OnConnectionStateChangedHandler
  getOnDisabledHandler()Lkotlin/jvm/functions/Function0; = OnDisabledHandler
  setOnDisabledHandler(Lkotlin/jvm/functions/Function0;)V = OnDisabledHandler
  getOnEnabledHandler()Lkotlin/jvm/functions/Function0; = OnEnabledHandler
  setOnEnabledHandler(Lkotlin/jvm/functions/Function0;)V = OnEnabledHandler
  getOnMetadataUpdatedHandler()Lkotlin/jvm/functions/Function1; = OnMetadataUpdatedHandler
  setOnMetadataUpdatedHandler(Lkotlin/jvm/functions/Function1;)V = OnMetadataUpdatedHandler
  getOnSubscribedHandler()Lkotlin/jvm/functions/Function0; = OnSubscribedHandler
  setOnSubscribedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscribedHandler
  getOnSubscriptionListChangedHandler()Lkotlin/jvm/functions/Function0; = OnSubscriptionListChangedHandler
  setOnSubscriptionListChangedHandler(Lkotlin/jvm/functions/Function0;)V = OnSubscriptionListChangedHandler
  getOnUnpublishedHandler()Lkotlin/jvm/functions/Function0; = OnUnpublishedHandler
  setOnUnpublishedHandler(Lkotlin/jvm/functions/Function0;)V = OnUnpublishedHandler
  getOnUnsubscribedHandler()Lkotlin/jvm/functions/Function0; = OnUnsubscribedHandler
  setOnUnsubscribedHandler(Lkotlin/jvm/functions/Function0;)V = OnUnsubscribedHandler
  getOrigin()Lcom/ntt/skyway/core/channel/Publication; = Origin
  getPublisher()Lcom/ntt/skyway/core/channel/member/Member; = Publisher
  getStream()Lcom/ntt/skyway/core/content/Stream; = Stream
  getSubscriptions()Ljava/util/List; = Subscriptions
  cancel(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Cancel(Kotlin.Coroutines.IContinuation)
  disable(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Disable(Kotlin.Coroutines.IContinuation)
  enable(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Enable(Kotlin.Coroutines.IContinuation)
  getState()Lcom/ntt/skyway/core/channel/Publication$State; = GetState()
  getStats(Ljava/lang/String;)Lcom/ntt/skyway/core/content/WebRTCStats; = GetStats(string)
  replaceStream(Lcom/ntt/skyway/core/content/local/LocalStream;)V = ReplaceStream(Com.Ntt.Skyway.Core.Content.Local.LocalStream)
  updateEncodings(Ljava/util/List;)V = UpdateEncodings(System.Collections.Generic.IList<Com.Ntt.Skyway.Core.Content.Encoding>)
  updateMetadata(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = UpdateMetadata(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/core/channel/Subscription = Com.Ntt.Skyway.Core.Channel.Subscription
  getChannel()Lcom/ntt/skyway/core/channel/Channel; = Channel
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  getId()Ljava/lang/String; = Id
  getOnCanceledHandler()Lkotlin/jvm/functions/Function0; = OnCanceledHandler
  setOnCanceledHandler(Lkotlin/jvm/functions/Function0;)V = OnCanceledHandler
  getOnConnectionStateChangedHandler()Lkotlin/jvm/functions/Function1; = OnConnectionStateChangedHandler
  setOnConnectionStateChangedHandler(Lkotlin/jvm/functions/Function1;)V = OnConnectionStateChangedHandler
  getPreferredEncodingId()Ljava/lang/String; = PreferredEncodingId
  getPublication()Lcom/ntt/skyway/core/channel/Publication; = Publication
  getStats()Lcom/ntt/skyway/core/content/WebRTCStats; = Stats
  getStream()Lcom/ntt/skyway/core/content/remote/RemoteStream; = Stream
  getSubscriber()Lcom/ntt/skyway/core/channel/member/Member; = Subscriber
  cancel(Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Cancel(Kotlin.Coroutines.IContinuation)
  changePreferredEncoding(Ljava/lang/String;)V = ChangePreferredEncoding(string)
  getState()Lcom/ntt/skyway/core/channel/Subscription$State; = GetState()
com/ntt/skyway/core/content/Codec = Com.Ntt.Skyway.Core.Content.Codec
  <init>(Lcom/ntt/skyway/core/content/Codec$MimeType;)V = .ctor(Com.Ntt.Skyway.Core.Content.Codec.MimeType)
  <init>(Ljava/lang/String;)V = .ctor(string)
  Companion = Companion
  component1()Ljava/lang/String; = Component1()
  copy(Ljava/lang/String;)Lcom/ntt/skyway/core/content/Codec; = Copy(string)
  getMimeType()Ljava/lang/String; = GetMimeType()
com/ntt/skyway/core/content/Encoding = Com.Ntt.Skyway.Core.Content.Encoding
  <init>(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Double;Ljava/lang/Double;)V = .ctor(string, Java.Lang.Integer, Java.Lang.Double, Java.Lang.Double)
  Companion = Companion
  getId()Ljava/lang/String; = Id
  getMaxBitrate()Ljava/lang/Integer; = MaxBitrate
  getMaxFramerate()Ljava/lang/Double; = MaxFramerate
  getScaleResolutionDownBy()Ljava/lang/Double; = ScaleResolutionDownBy
  component1()Ljava/lang/String; = Component1()
  component2()Ljava/lang/Integer; = Component2()
  component3()Ljava/lang/Double; = Component3()
  component4()Ljava/lang/Double; = Component4()
  copy(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Double;Ljava/lang/Double;)Lcom/ntt/skyway/core/content/Encoding; = Copy(string, Java.Lang.Integer, Java.Lang.Double, Java.Lang.Double)
com/ntt/skyway/core/content/local/LocalAudioStream = Com.Ntt.Skyway.Core.Content.Local.LocalAudioStream
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  dispose()V = Dispose()
  setVolume(D)V = SetVolume(double)
com/ntt/skyway/core/content/local/LocalDataStream = Com.Ntt.Skyway.Core.Content.Local.LocalDataStream
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  dispose()V = Dispose()
  write([B)V = Write(byte[])
  write(Ljava/lang/String;)V = Write(string)
com/ntt/skyway/core/content/local/LocalStream = Com.Ntt.Skyway.Core.Content.Local.LocalStream
  getSide()Lcom/ntt/skyway/core/content/Stream$Side; = GetSide()
com/ntt/skyway/core/content/local/LocalVideoStream = Com.Ntt.Skyway.Core.Content.Local.LocalVideoStream
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  addRenderer(Lcom/ntt/skyway/core/content/sink/Renderer;)V = AddRenderer(Com.Ntt.Skyway.Core.Content.Sink.IRenderer)
  dispose()V = Dispose()
  removeAllRenderer()V = RemoveAllRenderer()
  removeRenderer(Lcom/ntt/skyway/core/content/sink/Renderer;)V = RemoveRenderer(Com.Ntt.Skyway.Core.Content.Sink.IRenderer)
com/ntt/skyway/core/content/local/source/AudioSource = Com.Ntt.Skyway.Core.Content.Local.Source.AudioSource
  INSTANCE = Instance
  getAudioRecord()Landroid/media/AudioRecord; = AudioRecord
  isStarted()Z = IsStarted
  getOnAudioBufferHandler()Lkotlin/jvm/functions/Function1; = OnAudioBufferHandler
  setOnAudioBufferHandler(Lkotlin/jvm/functions/Function1;)V = OnAudioBufferHandler
  changeRecord(Landroid/media/AudioRecord;)V = ChangeRecord(Android.Media.AudioRecord)
  createStream()Lcom/ntt/skyway/core/content/local/LocalAudioStream; = CreateStream()
  start()V = Start()
  stop()V = Stop()
com/ntt/skyway/core/content/local/source/CameraSource = Com.Ntt.Skyway.Core.Content.Local.Source.CameraSource
  INSTANCE = Instance
  getOnCameraChangedHandler()Lkotlin/jvm/functions/Function1; = OnCameraChangedHandler
  setOnCameraChangedHandler(Lkotlin/jvm/functions/Function1;)V = OnCameraChangedHandler
  getOnCameraChangeErrorHandler()Lkotlin/jvm/functions/Function1; = OnCameraChangeErrorHandler
  setOnCameraChangeErrorHandler(Lkotlin/jvm/functions/Function1;)V = OnCameraChangeErrorHandler
  changeCamera(Ljava/lang/String;)V = ChangeCamera(string)
  getBackCameras(Landroid/content/Context;)Ljava/util/Set; = GetBackCameras(Android.Content.Context)
  getCameras(Landroid/content/Context;)Ljava/util/Set; = GetCameras(Android.Content.Context)
  getFrontCameras(Landroid/content/Context;)Ljava/util/Set; = GetFrontCameras(Android.Content.Context)
  startCapturing(Landroid/content/Context;Ljava/lang/String;Lcom/ntt/skyway/core/content/local/source/CameraSource$CapturingOptions;)V = StartCapturing(Android.Content.Context, string, Com.Ntt.Skyway.Core.Content.Local.Source.CameraSource.CapturingOptions)
  stopCapturing()V = StopCapturing()
com/ntt/skyway/core/content/local/source/CustomVideoFrameSource = Com.Ntt.Skyway.Core.Content.Local.Source.CustomVideoFrameSource
  <init>(II)V = .ctor(int, int)
  updateFrame(Landroid/graphics/Bitmap;I)V = UpdateFrame(Android.Graphics.Bitmap, int)
com/ntt/skyway/core/content/local/source/DataSource = Com.Ntt.Skyway.Core.Content.Local.Source.DataSource
  <init>()V = .ctor()
  createStream()Lcom/ntt/skyway/core/content/local/LocalDataStream; = CreateStream()
com/ntt/skyway/core/content/local/source/ScreenSource = Com.Ntt.Skyway.Core.Content.Local.Source.ScreenSource
  INSTANCE = Instance
  setup(Landroid/content/Context;Landroid/content/Intent;)V = Setup(Android.Content.Context, Android.Content.Intent)
  startCapturing(III)V = StartCapturing(int, int, int)
  stopCapturing()V = StopCapturing()
com/ntt/skyway/core/content/local/source/VideoFileSource = Com.Ntt.Skyway.Core.Content.Local.Source.VideoFileSource
  <init>(Landroid/content/Context;Ljava/lang/String;)V = .ctor(Android.Content.Context, string)
  startCapturing(III)V = StartCapturing(int, int, int)
  stopCapturing()V = StopCapturing()
com/ntt/skyway/core/content/local/source/VideoSource = Com.Ntt.Skyway.Core.Content.Local.Source.VideoSource
  <init>()V = .ctor()
  createStream()Lcom/ntt/skyway/core/content/local/LocalVideoStream; = CreateStream()
com/ntt/skyway/core/content/remote/RemoteAudioStream = Com.Ntt.Skyway.Core.Content.Remote.RemoteAudioStream
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  dispose()V = Dispose()
  setVolume(D)V = SetVolume(double)
com/ntt/skyway/core/content/remote/RemoteDataStream = Com.Ntt.Skyway.Core.Content.Remote.RemoteDataStream
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  getOnDataBufferHandler()Lkotlin/jvm/functions/Function1; = OnDataBufferHandler
  setOnDataBufferHandler(Lkotlin/jvm/functions/Function1;)V = OnDataBufferHandler
  getOnDataHandler()Lkotlin/jvm/functions/Function1; = OnDataHandler
  setOnDataHandler(Lkotlin/jvm/functions/Function1;)V = OnDataHandler
  dispose()V = Dispose()
com/ntt/skyway/core/content/remote/RemoteStream = Com.Ntt.Skyway.Core.Content.Remote.RemoteStream
  getSide()Lcom/ntt/skyway/core/content/Stream$Side; = GetSide()
com/ntt/skyway/core/content/remote/RemoteVideoStream = Com.Ntt.Skyway.Core.Content.Remote.RemoteVideoStream
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = ContentType
  addRenderer(Lcom/ntt/skyway/core/content/sink/Renderer;)V = AddRenderer(Com.Ntt.Skyway.Core.Content.Sink.IRenderer)
  dispose()V = Dispose()
  removeAllRenderer()V = RemoveAllRenderer()
  removeRenderer(Lcom/ntt/skyway/core/content/sink/Renderer;)V = RemoveRenderer(Com.Ntt.Skyway.Core.Content.Sink.IRenderer)
com/ntt/skyway/core/content/sink/AudioDestination = Com.Ntt.Skyway.Core.Content.Sink.AudioDestination
  INSTANCE = Instance
  getAudioTrack()Landroid/media/AudioTrack; = AudioTrack
  getOnAudioBufferHandler()Lkotlin/jvm/functions/Function1; = OnAudioBufferHandler
  setOnAudioBufferHandler(Lkotlin/jvm/functions/Function1;)V = OnAudioBufferHandler
  changeTrack(Landroid/media/AudioTrack;)V = ChangeTrack(Android.Media.AudioTrack)
com/ntt/skyway/core/content/sink/CustomRenderer = Com.Ntt.Skyway.Core.Content.Sink.CustomRenderer
  <init>()V = .ctor()
  getOnFrameHandler()Lkotlin/jvm/functions/Function1; = OnFrameHandler
  setOnFrameHandler(Lkotlin/jvm/functions/Function1;)V = OnFrameHandler
  isSetup()Z = Setup
  setSetup(Z)V = Setup
  dispose()V = Dispose()
com/ntt/skyway/core/content/sink/Renderer = Com.Ntt.Skyway.Core.Content.Sink.IRenderer
  isSetup()Z = Setup
  setSetup(Z)V = Setup
  dispose()V = Dispose()
com/ntt/skyway/core/content/sink/SurfaceViewRenderer = Com.Ntt.Skyway.Core.Content.Sink.SurfaceViewRenderer
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  isSetup()Z = Setup
  setSetup(Z)V = Setup
  dispose()V = Dispose()
  setup(Lcom/ntt/skyway/core/content/sink/SurfaceViewRenderer$LayoutParam;Lcom/ntt/skyway/core/content/sink/SurfaceViewRenderer$LayoutParam;)V = InvokeSetup(Com.Ntt.Skyway.Core.Content.Sink.SurfaceViewRenderer.LayoutParam, Com.Ntt.Skyway.Core.Content.Sink.SurfaceViewRenderer.LayoutParam)
  setScalingType(Lcom/ntt/skyway/core/content/sink/SurfaceViewRenderer$ScalingType;)V = SetScalingType(Com.Ntt.Skyway.Core.Content.Sink.SurfaceViewRenderer.ScalingType)
com/ntt/skyway/core/content/Stream = Com.Ntt.Skyway.Core.Content.Stream
  <init>(Ljava/lang/String;J)V = .ctor(string, long)
  getId()Ljava/lang/String; = Id
  dispose()V = Dispose()
  getContentType()Lcom/ntt/skyway/core/content/Stream$ContentType; = GetContentType()
  getSide()Lcom/ntt/skyway/core/content/Stream$Side; = GetSide()
com/ntt/skyway/core/content/WebRTCStats = Com.Ntt.Skyway.Core.Content.WebRTCStats
  <init>(Ljava/util/List;)V = .ctor(System.Collections.Generic.IList<Com.Ntt.Skyway.Core.Content.WebRTCStatsReport>)
  getReports()Ljava/util/List; = Reports
  component1()Ljava/util/List; = Component1()
  copy(Ljava/util/List;)Lcom/ntt/skyway/core/content/WebRTCStats; = Copy(System.Collections.Generic.IList<Com.Ntt.Skyway.Core.Content.WebRTCStatsReport>)
com/ntt/skyway/core/content/WebRTCStatsReport = Com.Ntt.Skyway.Core.Content.WebRTCStatsReport
  getId()Ljava/lang/String; = Id
  getType()Ljava/lang/String; = Type
  component1()Ljava/lang/String; = Component1()
  component2()Ljava/lang/String; = Component2()
com/ntt/skyway/core/SkyWayContext = Com.Ntt.Skyway.Core.SkyWayContext
  INSTANCE = Instance
  version = Version
  isSetup()Z = IsSetup
  getOnErrorHandler()Lkotlin/jvm/functions/Function1; = OnErrorHandler
  setOnErrorHandler(Lkotlin/jvm/functions/Function1;)V = OnErrorHandler
  getOnReconnectStartHandler()Lkotlin/jvm/functions/Function0; = OnReconnectStartHandler
  setOnReconnectStartHandler(Lkotlin/jvm/functions/Function0;)V = OnReconnectStartHandler
  getOnReconnectSuccessHandler()Lkotlin/jvm/functions/Function0; = OnReconnectSuccessHandler
  setOnReconnectSuccessHandler(Lkotlin/jvm/functions/Function0;)V = OnReconnectSuccessHandler
  getOnTokenExpiredHandler()Lkotlin/jvm/functions/Function0; = OnTokenExpiredHandler
  setOnTokenExpiredHandler(Lkotlin/jvm/functions/Function0;)V = OnTokenExpiredHandler
  getOnTokenRefreshingNeededHandler()Lkotlin/jvm/functions/Function0; = OnTokenRefreshingNeededHandler
  setOnTokenRefreshingNeededHandler(Lkotlin/jvm/functions/Function0;)V = OnTokenRefreshingNeededHandler
  getPlugins()Ljava/util/List; = Plugins
  _updateRtcConfig(Lcom/ntt/skyway/core/SkyWayContext$RtcConfig;)V = _updateRtcConfig(Com.Ntt.Skyway.Core.SkyWayContext.RtcConfig)
  dispose()V = Dispose()
  findPlugin(Ljava/lang/String;)Lcom/ntt/skyway/plugin/Plugin; = FindPlugin(string)
  onFatalError(Ljava/lang/String;)V = OnFatalError(string)
  onReconnectStart()V = OnReconnectStart()
  onReconnectSuccess()V = OnReconnectSuccess()
  onTokenExpired()V = OnTokenExpired()
  onTokenRefreshingNeeded()V = OnTokenRefreshingNeeded()
  registerPlugin(Lcom/ntt/skyway/plugin/Plugin;)V = RegisterPlugin(Com.Ntt.Skyway.Plugin.IPlugin)
  setup(Landroid/content/Context;Lcom/ntt/skyway/core/SkyWayContext$Options;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Setup(Android.Content.Context, Com.Ntt.Skyway.Core.SkyWayContext.Options, Kotlin.Jvm.Functions.IFunction1, Kotlin.Coroutines.IContinuation)
  updateAuthToken(Ljava/lang/String;)Z = UpdateAuthToken(string)
com/ntt/skyway/core/SkyWayOptIn = Com.Ntt.Skyway.Core.ISkyWayOptIn
com/ntt/skyway/core/util/Logger = Com.Ntt.Skyway.Core.Util.Logger
  INSTANCE = Instance
  getWebRTCLog()Z = WebRTCLog
  setWebRTCLog(Z)V = WebRTCLog
  getLogLevel()Lcom/ntt/skyway/core/util/Logger$LogLevel; = GetLogLevel()
  log(Lcom/ntt/skyway/core/util/Logger$LogLevel;Ljava/lang/String;)V = Log(Com.Ntt.Skyway.Core.Util.Logger.LogLevel, string)
  log(Lcom/ntt/skyway/core/util/Logger$LogLevel;Ljava/lang/String;Ljava/lang/String;)V = Log(Com.Ntt.Skyway.Core.Util.Logger.LogLevel, string, string)
  log(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V = Log(int, string, string, string, int)
  logD(Ljava/lang/String;)V = LogD(string)
  logE(Ljava/lang/String;)V = LogE(string)
  logI(Ljava/lang/String;)V = LogI(string)
  logV(Ljava/lang/String;)V = LogV(string)
  logW(Ljava/lang/String;)V = LogW(string)
  setLogLevel(Lcom/ntt/skyway/core/util/Logger$LogLevel;)V = SetLogLevel(Com.Ntt.Skyway.Core.Util.Logger.LogLevel)
com/ntt/skyway/plugin/Plugin = Com.Ntt.Skyway.Plugin.IPlugin
  getName()Ljava/lang/String; = Name
  createRemoteMember(Lcom/ntt/skyway/core/channel/member/Member$Dto;)Lcom/ntt/skyway/core/channel/member/RemoteMember; = CreateRemoteMember(Com.Ntt.Skyway.Core.Channel.Member.Member.Dto)
com/ntt/skyway/plugin/remotePerson/RemotePerson = Com.Ntt.Skyway.Plugin.RemotePerson.RemotePerson
  getSubType()Ljava/lang/String; = SubType
  getType()Lcom/ntt/skyway/core/channel/member/Member$Type; = Type
  subscribe(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Subscribe(string, Kotlin.Coroutines.IContinuation)
  unsubscribe(Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object; = Unsubscribe(string, Kotlin.Coroutines.IContinuation)
com/ntt/skyway/plugin/remotePerson/RemotePersonPlugin = Com.Ntt.Skyway.Plugin.RemotePerson.RemotePersonPlugin
  <init>()V = .ctor()
  getName()Ljava/lang/String; = Name
  createRemoteMember(Lcom/ntt/skyway/core/channel/member/Member$Dto;)Lcom/ntt/skyway/core/channel/member/RemoteMember; = CreateRemoteMember(Com.Ntt.Skyway.Core.Channel.Member.Member.Dto)
com/ntt/skyway/plugin/unknown/Unknown = Com.Ntt.Skyway.Plugin.Unknown.Unknown
  getSubType()Ljava/lang/String; = SubType
  getType()Lcom/ntt/skyway/core/channel/member/Member$Type; = Type
com/ntt/skyway/plugin/unknown/UnknownPlugin = Com.Ntt.Skyway.Plugin.Unknown.UnknownPlugin
  INSTANCE = Instance
  getName()Ljava/lang/String; = Name
  createRemoteMember(Lcom/ntt/skyway/core/channel/member/Member$Dto;)Lcom/ntt/skyway/core/channel/member/RemoteMember; = CreateRemoteMember(Com.Ntt.Skyway.Core.Channel.Member.Member.Dto)
